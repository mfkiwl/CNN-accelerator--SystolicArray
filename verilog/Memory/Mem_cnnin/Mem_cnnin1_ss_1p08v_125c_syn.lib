/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2020  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Dual Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname "Mem_cnnin1" -words 256 -bits 64 -frequency 1 -ring_width 4.0 -mux 4 -write_mask off -wp_size 8 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -dpccm on -asvm on -libname USERLIB -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      Synopsys model for Synchronous Dual-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  Mem_cnnin1
 *      Words:          256
 *      Word Width:     64
 *      Mux:            4
 *      Corner:        ss_1p08v_125c
 *
 *      Creation Date:  2020-04-01 15:07:55Z
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2020-04-01 15:07:55Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2020 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.080;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.500;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(ss_1p08v_125c) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.080;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ss_1p08v_125c;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(Mem_cnnin1_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(Mem_cnnin1_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(Mem_cnnin1_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Mem_cnnin1_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Mem_cnnin1_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Mem_cnnin1_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Mem_cnnin1_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Mem_cnnin1_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Mem_cnnin1_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Mem_cnnin1_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Mem_cnnin1_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(Mem_cnnin1_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (Mem_cnnin1_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 64;
		bit_from : 63;
		bit_to : 0 ;
		downto : true ;
	}
	type (Mem_cnnin1_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (Mem_cnnin1_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
cell(Mem_cnnin1) {
	area		 : 189854.831;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 8;
		word_width : 64;
	}
        bus(QA)   {
                bus_type : Mem_cnnin1_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : AA;
		}
                timing() {
                        related_pin :   "CLKA" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(Mem_cnnin1_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.293, 6.381, 6.469, 6.646, 7.117, 7.942, 8.826", \
                          "6.309, 6.397, 6.485, 6.662, 7.133, 7.958, 8.842", \
                          "6.329, 6.417, 6.505, 6.682, 7.153, 7.978, 8.861", \
                          "6.368, 6.457, 6.545, 6.722, 7.193, 8.018, 8.901", \
                          "6.488, 6.576, 6.664, 6.841, 7.312, 8.137, 9.021", \
                          "6.687, 6.775, 6.863, 7.040, 7.511, 8.336, 9.219", \
                          "6.885, 6.974, 7.062, 7.239, 7.710, 8.535, 9.418" \
                        )
                        }
                        rise_transition(Mem_cnnin1_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.123, 0.292, 0.461, 0.799, 1.700, 3.277, 4.966")
                        }
                        cell_fall(Mem_cnnin1_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.442, 6.509, 6.577, 6.711, 7.070, 7.698, 8.371", \
                          "6.458, 6.525, 6.592, 6.727, 7.086, 7.714, 8.387", \
                          "6.478, 6.545, 6.612, 6.747, 7.106, 7.734, 8.407", \
                          "6.517, 6.585, 6.652, 6.787, 7.146, 7.774, 8.447", \
                          "6.637, 6.704, 6.771, 6.906, 7.265, 7.893, 8.566", \
                          "6.836, 6.903, 6.970, 7.105, 7.464, 8.092, 8.765", \
                          "7.035, 7.102, 7.169, 7.304, 7.663, 8.291, 8.964" \
                        )
                        }
                        fall_transition(Mem_cnnin1_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.147, 0.276, 0.405, 0.663, 1.352, 2.558, 3.850")
                        }
                }
        }
        bus(QB)   {
                bus_type : Mem_cnnin1_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : AB;
		}
                timing() {
                        related_pin :   "CLKB" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(Mem_cnnin1_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.293, 6.381, 6.469, 6.646, 7.117, 7.942, 8.826", \
                          "6.309, 6.397, 6.485, 6.662, 7.133, 7.958, 8.842", \
                          "6.329, 6.417, 6.505, 6.682, 7.153, 7.978, 8.861", \
                          "6.368, 6.457, 6.545, 6.722, 7.193, 8.018, 8.901", \
                          "6.488, 6.576, 6.664, 6.841, 7.312, 8.137, 9.021", \
                          "6.687, 6.775, 6.863, 7.040, 7.511, 8.336, 9.219", \
                          "6.885, 6.974, 7.062, 7.239, 7.710, 8.535, 9.418" \
                        )
                        }
                        rise_transition(Mem_cnnin1_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.123, 0.292, 0.461, 0.799, 1.700, 3.277, 4.966")
                        }
                        cell_fall(Mem_cnnin1_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.442, 6.509, 6.577, 6.711, 7.070, 7.698, 8.371", \
                          "6.458, 6.525, 6.592, 6.727, 7.086, 7.714, 8.387", \
                          "6.478, 6.545, 6.612, 6.747, 7.106, 7.734, 8.407", \
                          "6.517, 6.585, 6.652, 6.787, 7.146, 7.774, 8.447", \
                          "6.637, 6.704, 6.771, 6.906, 7.265, 7.893, 8.566", \
                          "6.836, 6.903, 6.970, 7.105, 7.464, 8.092, 8.765", \
                          "7.035, 7.102, 7.169, 7.304, 7.663, 8.291, 8.964" \
                        )
                        }
                        fall_transition(Mem_cnnin1_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.147, 0.276, 0.405, 0.663, 1.352, 2.558, 3.850")
                        }
                }
        }
        pin(CLKA)   {
		direction : input;
		capacitance : 0.135;
                clock : true;
                max_transition : 1.500;
                timing() {
                        related_pin     : "CLKB" ;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142" \
                        )
                        }
                 }
                min_pulse_width_high : 0.469 ;
                min_pulse_width_low  : 0.700 ;
                min_period           : 6.837 ;


                internal_power(){
                        when : "(!CENA & ! \
                                 (WENA) \
                                ) \
                                 ";
                        rise_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("84.693, 84.693")
                        }
                        fall_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CENA & \
                                 (WENA) \
                                ) \
                                 ";
                        rise_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("59.263, 59.263")
                        }
                        fall_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CENA)";
                        rise_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.022, 0.022")
                        }
                        fall_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CENA)   {
                direction : input;
                capacitance : 0.010;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.140, 2.156, 2.176, 2.216, 2.335, 2.534, 2.734", \
                          "2.124, 2.140, 2.160, 2.200, 2.319, 2.519, 2.718", \
                          "2.104, 2.120, 2.140, 2.180, 2.300, 2.499, 2.698", \
                          "2.065, 2.081, 2.100, 2.140, 2.260, 2.459, 2.658", \
                          "1.945, 1.961, 1.981, 2.021, 2.140, 2.340, 2.539", \
                          "1.746, 1.762, 1.782, 1.822, 1.941, 2.141, 2.340", \
                          "1.547, 1.563, 1.583, 1.623, 1.743, 1.942, 2.141" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.867, 1.879, 1.895, 1.927, 2.022, 2.182, 2.341", \
                          "1.851, 1.863, 1.879, 1.911, 2.007, 2.166, 2.325", \
                          "1.831, 1.843, 1.859, 1.891, 1.987, 2.146, 2.305", \
                          "1.791, 1.804, 1.820, 1.851, 1.947, 2.106, 2.265", \
                          "1.672, 1.684, 1.700, 1.732, 1.828, 1.987, 2.146", \
                          "1.473, 1.485, 1.501, 1.533, 1.629, 1.788, 1.947", \
                          "1.274, 1.287, 1.302, 1.334, 1.430, 1.589, 1.748" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.618, 0.602, 0.582, 0.542, 0.500, 0.500, 0.500" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500" \
                        )
                        }
               }
        }
        pin(WENA){
                direction : input;
                capacitance : 0.010;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.268, 2.285, 2.306, 2.349, 2.477, 2.690, 2.904", \
                          "2.252, 2.269, 2.290, 2.333, 2.461, 2.675, 2.888", \
                          "2.232, 2.249, 2.271, 2.313, 2.441, 2.655, 2.868", \
                          "2.192, 2.209, 2.231, 2.273, 2.401, 2.615, 2.828", \
                          "2.073, 2.090, 2.111, 2.154, 2.282, 2.496, 2.709", \
                          "1.874, 1.891, 1.913, 1.955, 2.083, 2.297, 2.510", \
                          "1.675, 1.692, 1.714, 1.756, 1.884, 2.098, 2.311" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.671, 2.684, 2.701, 2.735, 2.835, 3.002, 3.170", \
                          "2.655, 2.669, 2.685, 2.719, 2.819, 2.987, 3.154", \
                          "2.635, 2.649, 2.665, 2.699, 2.799, 2.967, 3.134", \
                          "2.596, 2.609, 2.626, 2.659, 2.760, 2.927, 3.094", \
                          "2.476, 2.490, 2.506, 2.540, 2.640, 2.808, 2.975", \
                          "2.277, 2.291, 2.307, 2.341, 2.441, 2.609, 2.776", \
                          "2.078, 2.092, 2.108, 2.142, 2.242, 2.410, 2.577" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
               }
        }
        bus(AA)   {
                bus_type : Mem_cnnin1_ADDRESS;
                direction : input;
                capacitance : 0.017;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.943, 1.955, 1.970, 2.000, 2.090, 2.240, 2.390", \
                          "1.927, 1.939, 1.954, 1.984, 2.074, 2.224, 2.374", \
                          "1.907, 1.919, 1.934, 1.964, 2.054, 2.204, 2.354", \
                          "1.867, 1.879, 1.894, 1.924, 2.014, 2.164, 2.315", \
                          "1.748, 1.760, 1.775, 1.805, 1.895, 2.045, 2.195", \
                          "1.549, 1.561, 1.576, 1.606, 1.696, 1.846, 1.996", \
                          "1.350, 1.362, 1.377, 1.407, 1.497, 1.647, 1.797" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.015, 1.026, 1.040, 1.068, 1.152, 1.293, 1.433", \
                          "0.999, 1.010, 1.024, 1.052, 1.136, 1.277, 1.417", \
                          "0.979, 0.990, 1.004, 1.032, 1.116, 1.257, 1.397", \
                          "0.939, 0.950, 0.964, 0.992, 1.077, 1.217, 1.357", \
                          "0.820, 0.831, 0.845, 0.873, 0.957, 1.098, 1.238", \
                          "0.621, 0.632, 0.646, 0.674, 0.758, 0.899, 1.039", \
                          "0.422, 0.433, 0.447, 0.475, 0.559, 0.700, 0.840" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.407, 0.395, 0.380, 0.350, 0.260, 0.230, 0.230" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.268, 0.257, 0.243, 0.230, 0.230, 0.230, 0.230", \
                          "0.467, 0.456, 0.442, 0.414, 0.329, 0.230, 0.230", \
                          "0.666, 0.655, 0.641, 0.613, 0.528, 0.388, 0.248" \
                        )
                        }
               }
                internal_power(){
                        when : "CENA";
                        rise_power(Mem_cnnin1_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.639, 0.639")
                        }
                        fall_power(Mem_cnnin1_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.639, 0.639")
                        }
                }
        }
        bus(DA)   {
                bus_type : Mem_cnnin1_DATA;
                memory_write() {
                        address : AA;
                        clocked_on : "CLKA";
                }
                direction : input;
                capacitance : 0.002;
                timing() {
                        related_pin     : CLKA;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.786, 1.800, 1.816, 1.849, 1.949, 2.114, 2.279", \
                          "1.771, 1.784, 1.800, 1.833, 1.933, 2.098, 2.263", \
                          "1.751, 1.764, 1.780, 1.814, 1.913, 2.078, 2.244", \
                          "1.711, 1.724, 1.741, 1.774, 1.873, 2.038, 2.204", \
                          "1.592, 1.605, 1.621, 1.654, 1.754, 1.919, 2.084", \
                          "1.393, 1.406, 1.422, 1.455, 1.555, 1.720, 1.886", \
                          "1.194, 1.207, 1.224, 1.257, 1.356, 1.521, 1.687" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.894, 1.909, 1.927, 1.964, 2.074, 2.257, 2.441", \
                          "1.878, 1.893, 1.911, 1.948, 2.058, 2.241, 2.425", \
                          "1.858, 1.873, 1.891, 1.928, 2.038, 2.221, 2.405", \
                          "1.818, 1.833, 1.851, 1.888, 1.998, 2.182, 2.365", \
                          "1.699, 1.714, 1.732, 1.769, 1.879, 2.062, 2.246", \
                          "1.500, 1.515, 1.533, 1.570, 1.680, 1.863, 2.047", \
                          "1.301, 1.316, 1.334, 1.371, 1.481, 1.664, 1.848" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKA;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.723, 0.708, 0.690, 0.653, 0.630, 0.630, 0.630", \
                          "0.922, 0.907, 0.889, 0.852, 0.742, 0.630, 0.630" \
                        )
                        }
               }
        }
        pin(CLKB)   {
		direction : input;
		capacitance : 0.135;
                clock : true;
                max_transition : 1.500;
                timing() {
                        related_pin     : "CLKA" ;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142", \
                          "5.142, 5.142, 5.142, 5.142, 5.142, 5.142, 5.142" \
                        )
                        }
                 }
                min_pulse_width_high : 0.469 ;
                min_pulse_width_low  : 0.700 ;
                min_period           : 6.837 ;


                internal_power(){
                        when : "(!CENB & ! \
                                 (WENB) \
                                ) \
                                 ";
                        rise_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("84.693, 84.693")
                        }
                        fall_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
                internal_power(){
                        when : "(!CENB & \
                                 (WENB) \
                                ) \
                                 ";
                        rise_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("59.263, 59.263")
                        }
                        fall_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CENB)";
                        rise_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.022, 0.022")
                        }
                        fall_power(Mem_cnnin1_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CENB)   {
                direction : input;
                capacitance : 0.010;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.140, 2.156, 2.176, 2.216, 2.335, 2.534, 2.734", \
                          "2.124, 2.140, 2.160, 2.200, 2.319, 2.519, 2.718", \
                          "2.104, 2.120, 2.140, 2.180, 2.300, 2.499, 2.698", \
                          "2.065, 2.081, 2.100, 2.140, 2.260, 2.459, 2.658", \
                          "1.945, 1.961, 1.981, 2.021, 2.140, 2.340, 2.539", \
                          "1.746, 1.762, 1.782, 1.822, 1.941, 2.141, 2.340", \
                          "1.547, 1.563, 1.583, 1.623, 1.743, 1.942, 2.141" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.867, 1.879, 1.895, 1.927, 2.022, 2.182, 2.341", \
                          "1.851, 1.863, 1.879, 1.911, 2.007, 2.166, 2.325", \
                          "1.831, 1.843, 1.859, 1.891, 1.987, 2.146, 2.305", \
                          "1.791, 1.804, 1.820, 1.851, 1.947, 2.106, 2.265", \
                          "1.672, 1.684, 1.700, 1.732, 1.828, 1.987, 2.146", \
                          "1.473, 1.485, 1.501, 1.533, 1.629, 1.788, 1.947", \
                          "1.274, 1.287, 1.302, 1.334, 1.430, 1.589, 1.748" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.618, 0.602, 0.582, 0.542, 0.500, 0.500, 0.500" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500" \
                        )
                        }
               }
        }
        pin(WENB){
                direction : input;
                capacitance : 0.010;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.268, 2.285, 2.306, 2.349, 2.477, 2.690, 2.904", \
                          "2.252, 2.269, 2.290, 2.333, 2.461, 2.675, 2.888", \
                          "2.232, 2.249, 2.271, 2.313, 2.441, 2.655, 2.868", \
                          "2.192, 2.209, 2.231, 2.273, 2.401, 2.615, 2.828", \
                          "2.073, 2.090, 2.111, 2.154, 2.282, 2.496, 2.709", \
                          "1.874, 1.891, 1.913, 1.955, 2.083, 2.297, 2.510", \
                          "1.675, 1.692, 1.714, 1.756, 1.884, 2.098, 2.311" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.671, 2.684, 2.701, 2.735, 2.835, 3.002, 3.170", \
                          "2.655, 2.669, 2.685, 2.719, 2.819, 2.987, 3.154", \
                          "2.635, 2.649, 2.665, 2.699, 2.799, 2.967, 3.134", \
                          "2.596, 2.609, 2.626, 2.659, 2.760, 2.927, 3.094", \
                          "2.476, 2.490, 2.506, 2.540, 2.640, 2.808, 2.975", \
                          "2.277, 2.291, 2.307, 2.341, 2.441, 2.609, 2.776", \
                          "2.078, 2.092, 2.108, 2.142, 2.242, 2.410, 2.577" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
               }
        }
        bus(AB)   {
                bus_type : Mem_cnnin1_ADDRESS;
                direction : input;
                capacitance : 0.017;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.943, 1.955, 1.970, 2.000, 2.090, 2.240, 2.390", \
                          "1.927, 1.939, 1.954, 1.984, 2.074, 2.224, 2.374", \
                          "1.907, 1.919, 1.934, 1.964, 2.054, 2.204, 2.354", \
                          "1.867, 1.879, 1.894, 1.924, 2.014, 2.164, 2.315", \
                          "1.748, 1.760, 1.775, 1.805, 1.895, 2.045, 2.195", \
                          "1.549, 1.561, 1.576, 1.606, 1.696, 1.846, 1.996", \
                          "1.350, 1.362, 1.377, 1.407, 1.497, 1.647, 1.797" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.015, 1.026, 1.040, 1.068, 1.152, 1.293, 1.433", \
                          "0.999, 1.010, 1.024, 1.052, 1.136, 1.277, 1.417", \
                          "0.979, 0.990, 1.004, 1.032, 1.116, 1.257, 1.397", \
                          "0.939, 0.950, 0.964, 0.992, 1.077, 1.217, 1.357", \
                          "0.820, 0.831, 0.845, 0.873, 0.957, 1.098, 1.238", \
                          "0.621, 0.632, 0.646, 0.674, 0.758, 0.899, 1.039", \
                          "0.422, 0.433, 0.447, 0.475, 0.559, 0.700, 0.840" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.407, 0.395, 0.380, 0.350, 0.260, 0.230, 0.230" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.268, 0.257, 0.243, 0.230, 0.230, 0.230, 0.230", \
                          "0.467, 0.456, 0.442, 0.414, 0.329, 0.230, 0.230", \
                          "0.666, 0.655, 0.641, 0.613, 0.528, 0.388, 0.248" \
                        )
                        }
               }
                internal_power(){
                        when : "CENB";
                        rise_power(Mem_cnnin1_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.639, 0.639")
                        }
                        fall_power(Mem_cnnin1_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.639, 0.639")
                        }
                }
        }
        bus(DB)   {
                bus_type : Mem_cnnin1_DATA;
                memory_write() {
                        address : AB;
                        clocked_on : "CLKB";
                }
                direction : input;
                capacitance : 0.002;
                timing() {
                        related_pin     : CLKB;
                        timing_type     : setup_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.786, 1.800, 1.816, 1.849, 1.949, 2.114, 2.279", \
                          "1.771, 1.784, 1.800, 1.833, 1.933, 2.098, 2.263", \
                          "1.751, 1.764, 1.780, 1.814, 1.913, 2.078, 2.244", \
                          "1.711, 1.724, 1.741, 1.774, 1.873, 2.038, 2.204", \
                          "1.592, 1.605, 1.621, 1.654, 1.754, 1.919, 2.084", \
                          "1.393, 1.406, 1.422, 1.455, 1.555, 1.720, 1.886", \
                          "1.194, 1.207, 1.224, 1.257, 1.356, 1.521, 1.687" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.894, 1.909, 1.927, 1.964, 2.074, 2.257, 2.441", \
                          "1.878, 1.893, 1.911, 1.948, 2.058, 2.241, 2.425", \
                          "1.858, 1.873, 1.891, 1.928, 2.038, 2.221, 2.405", \
                          "1.818, 1.833, 1.851, 1.888, 1.998, 2.182, 2.365", \
                          "1.699, 1.714, 1.732, 1.769, 1.879, 2.062, 2.246", \
                          "1.500, 1.515, 1.533, 1.570, 1.680, 1.863, 2.047", \
                          "1.301, 1.316, 1.334, 1.371, 1.481, 1.664, 1.848" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLKB;
                        timing_type     : hold_rising ;
                        rise_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(Mem_cnnin1_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.723, 0.708, 0.690, 0.653, 0.630, 0.630, 0.630", \
                          "0.922, 0.907, 0.889, 0.852, 0.742, 0.630, 0.630" \
                        )
                        }
               }
        }

        cell_leakage_power : 2.87E-2;
}
}
