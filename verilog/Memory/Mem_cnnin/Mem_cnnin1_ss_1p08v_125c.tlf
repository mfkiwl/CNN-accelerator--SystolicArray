/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2020  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Dual Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname "Mem_cnnin1" -words 256 -bits 64 -frequency 1 -ring_width 4.0 -mux 4 -write_mask off -wp_size 8 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -dpccm on -asvm on -libname USERLIB -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      TLF model for Synchronous Dual-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  Mem_cnnin1
 *      Words:          256
 *      Word Width:     64
 *      Mux:            4
 *      Process:        ss_1p08v_125c
 *
 *      Creation Date:  2020-04-01 15:08:01Z
 *      Version:	2009Q1V1
 *
 *      Verified With: Cadence Central Delay Calculator
 *
 *      Modeling Assumptions: This memory model is written using TLF 3.0
 *          constructs.  Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2020-04-01 15:08:01Z")
  vendor("Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2020 ARM Physical IP, Inc.")
  environment("ss_1p08v_125c")
  technology("CMOS")
  version("2009Q1V1")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(125.000)
  voltage(1.080)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(1.500) error(1.500))
  load_limit(0.860) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(Mem_cnnin1
Area (189854.831)
CT_TOLERANCE(0.108)
TIMING_model (tch_tcens_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (2.140:2.140:2.140 2.156:2.156:2.156 2.176:2.176:2.176 2.216:2.216:2.216 2.335:2.335:2.335 2.534:2.534:2.534 2.734:2.734:2.734)
         (2.124:2.124:2.124 2.140:2.140:2.140 2.160:2.160:2.160 2.200:2.200:2.200 2.319:2.319:2.319 2.519:2.519:2.519 2.718:2.718:2.718)
         (2.104:2.104:2.104 2.120:2.120:2.120 2.140:2.140:2.140 2.180:2.180:2.180 2.300:2.300:2.300 2.499:2.499:2.499 2.698:2.698:2.698)
         (2.065:2.065:2.065 2.081:2.081:2.081 2.100:2.100:2.100 2.140:2.140:2.140 2.260:2.260:2.260 2.459:2.459:2.459 2.658:2.658:2.658)
         (1.945:1.945:1.945 1.961:1.961:1.961 1.981:1.981:1.981 2.021:2.021:2.021 2.140:2.140:2.140 2.340:2.340:2.340 2.539:2.539:2.539)
         (1.746:1.746:1.746 1.762:1.762:1.762 1.782:1.782:1.782 1.822:1.822:1.822 1.941:1.941:1.941 2.141:2.141:2.141 2.340:2.340:2.340)
         (1.547:1.547:1.547 1.563:1.563:1.563 1.583:1.583:1.583 1.623:1.623:1.623 1.743:1.743:1.743 1.942:1.942:1.942 2.141:2.141:2.141)
       )))
TIMING_model (tch_tcens_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.867:1.867:1.867 1.879:1.879:1.879 1.895:1.895:1.895 1.927:1.927:1.927 2.022:2.022:2.022 2.182:2.182:2.182 2.341:2.341:2.341)
         (1.851:1.851:1.851 1.863:1.863:1.863 1.879:1.879:1.879 1.911:1.911:1.911 2.007:2.007:2.007 2.166:2.166:2.166 2.325:2.325:2.325)
         (1.831:1.831:1.831 1.843:1.843:1.843 1.859:1.859:1.859 1.891:1.891:1.891 1.987:1.987:1.987 2.146:2.146:2.146 2.305:2.305:2.305)
         (1.791:1.791:1.791 1.804:1.804:1.804 1.820:1.820:1.820 1.851:1.851:1.851 1.947:1.947:1.947 2.106:2.106:2.106 2.265:2.265:2.265)
         (1.672:1.672:1.672 1.684:1.684:1.684 1.700:1.700:1.700 1.732:1.732:1.732 1.828:1.828:1.828 1.987:1.987:1.987 2.146:2.146:2.146)
         (1.473:1.473:1.473 1.485:1.485:1.485 1.501:1.501:1.501 1.533:1.533:1.533 1.629:1.629:1.629 1.788:1.788:1.788 1.947:1.947:1.947)
         (1.274:1.274:1.274 1.287:1.287:1.287 1.302:1.302:1.302 1.334:1.334:1.334 1.430:1.430:1.430 1.589:1.589:1.589 1.748:1.748:1.748)
       )))
TIMING_model (tch_tcenh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.618:0.618:0.618 0.602:0.602:0.602 0.582:0.582:0.582 0.542:0.542:0.542 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
       )))
TIMING_model (tch_tcenh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
       )))
TIMING_model (tch_twens_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (2.268:2.268:2.268 2.285:2.285:2.285 2.306:2.306:2.306 2.349:2.349:2.349 2.477:2.477:2.477 2.690:2.690:2.690 2.904:2.904:2.904)
         (2.252:2.252:2.252 2.269:2.269:2.269 2.290:2.290:2.290 2.333:2.333:2.333 2.461:2.461:2.461 2.675:2.675:2.675 2.888:2.888:2.888)
         (2.232:2.232:2.232 2.249:2.249:2.249 2.271:2.271:2.271 2.313:2.313:2.313 2.441:2.441:2.441 2.655:2.655:2.655 2.868:2.868:2.868)
         (2.192:2.192:2.192 2.209:2.209:2.209 2.231:2.231:2.231 2.273:2.273:2.273 2.401:2.401:2.401 2.615:2.615:2.615 2.828:2.828:2.828)
         (2.073:2.073:2.073 2.090:2.090:2.090 2.111:2.111:2.111 2.154:2.154:2.154 2.282:2.282:2.282 2.496:2.496:2.496 2.709:2.709:2.709)
         (1.874:1.874:1.874 1.891:1.891:1.891 1.913:1.913:1.913 1.955:1.955:1.955 2.083:2.083:2.083 2.297:2.297:2.297 2.510:2.510:2.510)
         (1.675:1.675:1.675 1.692:1.692:1.692 1.714:1.714:1.714 1.756:1.756:1.756 1.884:1.884:1.884 2.098:2.098:2.098 2.311:2.311:2.311)
       )))
TIMING_model (tch_twens_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (2.671:2.671:2.671 2.684:2.684:2.684 2.701:2.701:2.701 2.735:2.735:2.735 2.835:2.835:2.835 3.002:3.002:3.002 3.170:3.170:3.170)
         (2.655:2.655:2.655 2.669:2.669:2.669 2.685:2.685:2.685 2.719:2.719:2.719 2.819:2.819:2.819 2.987:2.987:2.987 3.154:3.154:3.154)
         (2.635:2.635:2.635 2.649:2.649:2.649 2.665:2.665:2.665 2.699:2.699:2.699 2.799:2.799:2.799 2.967:2.967:2.967 3.134:3.134:3.134)
         (2.596:2.596:2.596 2.609:2.609:2.609 2.626:2.626:2.626 2.659:2.659:2.659 2.760:2.760:2.760 2.927:2.927:2.927 3.094:3.094:3.094)
         (2.476:2.476:2.476 2.490:2.490:2.490 2.506:2.506:2.506 2.540:2.540:2.540 2.640:2.640:2.640 2.808:2.808:2.808 2.975:2.975:2.975)
         (2.277:2.277:2.277 2.291:2.291:2.291 2.307:2.307:2.307 2.341:2.341:2.341 2.441:2.441:2.441 2.609:2.609:2.609 2.776:2.776:2.776)
         (2.078:2.078:2.078 2.092:2.092:2.092 2.108:2.108:2.108 2.142:2.142:2.142 2.242:2.242:2.242 2.410:2.410:2.410 2.577:2.577:2.577)
       )))
TIMING_model (tch_twenh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_twenh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_tas_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.943:1.943:1.943 1.955:1.955:1.955 1.970:1.970:1.970 2.000:2.000:2.000 2.090:2.090:2.090 2.240:2.240:2.240 2.390:2.390:2.390)
         (1.927:1.927:1.927 1.939:1.939:1.939 1.954:1.954:1.954 1.984:1.984:1.984 2.074:2.074:2.074 2.224:2.224:2.224 2.374:2.374:2.374)
         (1.907:1.907:1.907 1.919:1.919:1.919 1.934:1.934:1.934 1.964:1.964:1.964 2.054:2.054:2.054 2.204:2.204:2.204 2.354:2.354:2.354)
         (1.867:1.867:1.867 1.879:1.879:1.879 1.894:1.894:1.894 1.924:1.924:1.924 2.014:2.014:2.014 2.164:2.164:2.164 2.315:2.315:2.315)
         (1.748:1.748:1.748 1.760:1.760:1.760 1.775:1.775:1.775 1.805:1.805:1.805 1.895:1.895:1.895 2.045:2.045:2.045 2.195:2.195:2.195)
         (1.549:1.549:1.549 1.561:1.561:1.561 1.576:1.576:1.576 1.606:1.606:1.606 1.696:1.696:1.696 1.846:1.846:1.846 1.996:1.996:1.996)
         (1.350:1.350:1.350 1.362:1.362:1.362 1.377:1.377:1.377 1.407:1.407:1.407 1.497:1.497:1.497 1.647:1.647:1.647 1.797:1.797:1.797)
       )))
TIMING_model (tch_tas_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.015:1.015:1.015 1.026:1.026:1.026 1.040:1.040:1.040 1.068:1.068:1.068 1.152:1.152:1.152 1.293:1.293:1.293 1.433:1.433:1.433)
         (0.999:0.999:0.999 1.010:1.010:1.010 1.024:1.024:1.024 1.052:1.052:1.052 1.136:1.136:1.136 1.277:1.277:1.277 1.417:1.417:1.417)
         (0.979:0.979:0.979 0.990:0.990:0.990 1.004:1.004:1.004 1.032:1.032:1.032 1.116:1.116:1.116 1.257:1.257:1.257 1.397:1.397:1.397)
         (0.939:0.939:0.939 0.950:0.950:0.950 0.964:0.964:0.964 0.992:0.992:0.992 1.077:1.077:1.077 1.217:1.217:1.217 1.357:1.357:1.357)
         (0.820:0.820:0.820 0.831:0.831:0.831 0.845:0.845:0.845 0.873:0.873:0.873 0.957:0.957:0.957 1.098:1.098:1.098 1.238:1.238:1.238)
         (0.621:0.621:0.621 0.632:0.632:0.632 0.646:0.646:0.646 0.674:0.674:0.674 0.758:0.758:0.758 0.899:0.899:0.899 1.039:1.039:1.039)
         (0.422:0.422:0.422 0.433:0.433:0.433 0.447:0.447:0.447 0.475:0.475:0.475 0.559:0.559:0.559 0.700:0.700:0.700 0.840:0.840:0.840)
       )))
TIMING_model (tch_tah_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.407:0.407:0.407 0.395:0.395:0.395 0.380:0.380:0.380 0.350:0.350:0.350 0.260:0.260:0.260 0.230:0.230:0.230 0.230:0.230:0.230)
       )))
TIMING_model (tch_tah_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.268:0.268:0.268 0.257:0.257:0.257 0.243:0.243:0.243 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.467:0.467:0.467 0.456:0.456:0.456 0.442:0.442:0.442 0.414:0.414:0.414 0.329:0.329:0.329 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.666:0.666:0.666 0.655:0.655:0.655 0.641:0.641:0.641 0.613:0.613:0.613 0.528:0.528:0.528 0.388:0.388:0.388 0.248:0.248:0.248)
       )))
TIMING_model (tch_tds_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.786:1.786:1.786 1.800:1.800:1.800 1.816:1.816:1.816 1.849:1.849:1.849 1.949:1.949:1.949 2.114:2.114:2.114 2.279:2.279:2.279)
         (1.771:1.771:1.771 1.784:1.784:1.784 1.800:1.800:1.800 1.833:1.833:1.833 1.933:1.933:1.933 2.098:2.098:2.098 2.263:2.263:2.263)
         (1.751:1.751:1.751 1.764:1.764:1.764 1.780:1.780:1.780 1.814:1.814:1.814 1.913:1.913:1.913 2.078:2.078:2.078 2.244:2.244:2.244)
         (1.711:1.711:1.711 1.724:1.724:1.724 1.741:1.741:1.741 1.774:1.774:1.774 1.873:1.873:1.873 2.038:2.038:2.038 2.204:2.204:2.204)
         (1.592:1.592:1.592 1.605:1.605:1.605 1.621:1.621:1.621 1.654:1.654:1.654 1.754:1.754:1.754 1.919:1.919:1.919 2.084:2.084:2.084)
         (1.393:1.393:1.393 1.406:1.406:1.406 1.422:1.422:1.422 1.455:1.455:1.455 1.555:1.555:1.555 1.720:1.720:1.720 1.886:1.886:1.886)
         (1.194:1.194:1.194 1.207:1.207:1.207 1.224:1.224:1.224 1.257:1.257:1.257 1.356:1.356:1.356 1.521:1.521:1.521 1.687:1.687:1.687)
       )))
TIMING_model (tch_tds_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.894:1.894:1.894 1.909:1.909:1.909 1.927:1.927:1.927 1.964:1.964:1.964 2.074:2.074:2.074 2.257:2.257:2.257 2.441:2.441:2.441)
         (1.878:1.878:1.878 1.893:1.893:1.893 1.911:1.911:1.911 1.948:1.948:1.948 2.058:2.058:2.058 2.241:2.241:2.241 2.425:2.425:2.425)
         (1.858:1.858:1.858 1.873:1.873:1.873 1.891:1.891:1.891 1.928:1.928:1.928 2.038:2.038:2.038 2.221:2.221:2.221 2.405:2.405:2.405)
         (1.818:1.818:1.818 1.833:1.833:1.833 1.851:1.851:1.851 1.888:1.888:1.888 1.998:1.998:1.998 2.182:2.182:2.182 2.365:2.365:2.365)
         (1.699:1.699:1.699 1.714:1.714:1.714 1.732:1.732:1.732 1.769:1.769:1.769 1.879:1.879:1.879 2.062:2.062:2.062 2.246:2.246:2.246)
         (1.500:1.500:1.500 1.515:1.515:1.515 1.533:1.533:1.533 1.570:1.570:1.570 1.680:1.680:1.680 1.863:1.863:1.863 2.047:2.047:2.047)
         (1.301:1.301:1.301 1.316:1.316:1.316 1.334:1.334:1.334 1.371:1.371:1.371 1.481:1.481:1.481 1.664:1.664:1.664 1.848:1.848:1.848)
       )))
TIMING_model (tch_tdh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_tdh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.723:0.723:0.723 0.708:0.708:0.708 0.690:0.690:0.690 0.653:0.653:0.653 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.922:0.922:0.922 0.907:0.907:0.907 0.889:0.889:0.889 0.852:0.852:0.852 0.742:0.742:0.742 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_clkas_clkb_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
       )))
TIMING_model (tch_clkbs_clka_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
         (5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142 5.142:5.142:5.142)
       )))
TIMING_model (dly_clk_q_rise      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (6.293:6.293:6.293 6.381:6.381:6.381 6.469:6.469:6.469 6.646:6.646:6.646 7.117:7.117:7.117 7.942:7.942:7.942 8.826:8.826:8.826)
         (6.309:6.309:6.309 6.397:6.397:6.397 6.485:6.485:6.485 6.662:6.662:6.662 7.133:7.133:7.133 7.958:7.958:7.958 8.842:8.842:8.842)
         (6.329:6.329:6.329 6.417:6.417:6.417 6.505:6.505:6.505 6.682:6.682:6.682 7.153:7.153:7.153 7.978:7.978:7.978 8.861:8.861:8.861)
         (6.368:6.368:6.368 6.457:6.457:6.457 6.545:6.545:6.545 6.722:6.722:6.722 7.193:7.193:7.193 8.018:8.018:8.018 8.901:8.901:8.901)
         (6.488:6.488:6.488 6.576:6.576:6.576 6.664:6.664:6.664 6.841:6.841:6.841 7.312:7.312:7.312 8.137:8.137:8.137 9.021:9.021:9.021)
         (6.687:6.687:6.687 6.775:6.775:6.775 6.863:6.863:6.863 7.040:7.040:7.040 7.511:7.511:7.511 8.336:8.336:8.336 9.219:9.219:9.219)
         (6.885:6.885:6.885 6.974:6.974:6.974 7.062:7.062:7.062 7.239:7.239:7.239 7.710:7.710:7.710 8.535:8.535:8.535 9.418:9.418:9.418)
       )))
TIMING_model (dly_clk_q_fall      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (6.442:6.442:6.442 6.509:6.509:6.509 6.577:6.577:6.577 6.711:6.711:6.711 7.070:7.070:7.070 7.698:7.698:7.698 8.371:8.371:8.371)
         (6.458:6.458:6.458 6.525:6.525:6.525 6.592:6.592:6.592 6.727:6.727:6.727 7.086:7.086:7.086 7.714:7.714:7.714 8.387:8.387:8.387)
         (6.478:6.478:6.478 6.545:6.545:6.545 6.612:6.612:6.612 6.747:6.747:6.747 7.106:7.106:7.106 7.734:7.734:7.734 8.407:8.407:8.407)
         (6.517:6.517:6.517 6.585:6.585:6.585 6.652:6.652:6.652 6.787:6.787:6.787 7.146:7.146:7.146 7.774:7.774:7.774 8.447:8.447:8.447)
         (6.637:6.637:6.637 6.704:6.704:6.704 6.771:6.771:6.771 6.906:6.906:6.906 7.265:7.265:7.265 7.893:7.893:7.893 8.566:8.566:8.566)
         (6.836:6.836:6.836 6.903:6.903:6.903 6.970:6.970:6.970 7.105:7.105:7.105 7.464:7.464:7.464 8.092:8.092:8.092 8.765:8.765:8.765)
         (7.035:7.035:7.035 7.102:7.102:7.102 7.169:7.169:7.169 7.304:7.304:7.304 7.663:7.663:7.663 8.291:8.291:8.291 8.964:8.964:8.964)
       )))
TIMING_model (sl_q_rise      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.123:0.123:0.123 0.292:0.292:0.292 0.461:0.461:0.461 0.799:0.799:0.799 1.700:1.700:1.700 3.277:3.277:3.277 4.966:4.966:4.966))))
TIMING_model (sl_q_fall      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.147:0.147:0.147 0.276:0.276:0.276 0.405:0.405:0.405 0.663:0.663:0.663 1.352:1.352:1.352 2.558:2.558:2.558 3.850:3.850:3.850))))
TIMING_model (period_tcyc (const (6.837)))
TIMING_model (tpw_tckl (const (0.700)))
TIMING_model (tpw_tckh (const (0.469)))
bus(QA[63:0] bustype(output)
 load_limit(warn(0.860) error(2.147483647e3))
 capacitance(0.000)
)
pin(CLKA pintype(input)
 capacitance(0.135)
)
pin(CENA pintype(input)
 capacitance(0.010)
)
pin(WENA pintype(input)
 capacitance(0.010)
)
bus(AA[7:0] bustype(input)
 capacitance(0.017)
)
bus(DA[63:0] bustype(input)
 capacitance(0.002)
)
path (CLKA => QA[0] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[0] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[1] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[1] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[2] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[2] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[3] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[3] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[4] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[4] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[5] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[5] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[6] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[6] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[7] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[7] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[8] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[8] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[9] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[9] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[10] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[10] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[11] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[11] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[12] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[12] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[13] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[13] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[14] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[14] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[15] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[15] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[16] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[16] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[17] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[17] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[18] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[18] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[19] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[19] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[20] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[20] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[21] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[21] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[22] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[22] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[23] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[23] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[24] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[24] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[25] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[25] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[26] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[26] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[27] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[27] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[28] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[28] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[29] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[29] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[30] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[30] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[31] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[31] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[32] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[32] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[33] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[33] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[34] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[34] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[35] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[35] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[36] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[36] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[37] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[37] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[38] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[38] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[39] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[39] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[40] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[40] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[41] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[41] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[42] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[42] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[43] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[43] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[44] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[44] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[45] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[45] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[46] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[46] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[47] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[47] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[48] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[48] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[49] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[49] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[50] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[50] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[51] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[51] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[52] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[52] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[53] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[53] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[54] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[54] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[55] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[55] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[56] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[56] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[57] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[57] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[58] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[58] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[59] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[59] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[60] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[60] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[61] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[61] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[62] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[62] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[63] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[63] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))

setup (DA[0] => CLKA 01 posedge  tch_tds_rise)
hold (DA[0] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[0] => CLKA 10 posedge  tch_tds_fall)
hold (DA[0] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[1] => CLKA 01 posedge  tch_tds_rise)
hold (DA[1] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[1] => CLKA 10 posedge  tch_tds_fall)
hold (DA[1] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[2] => CLKA 01 posedge  tch_tds_rise)
hold (DA[2] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[2] => CLKA 10 posedge  tch_tds_fall)
hold (DA[2] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[3] => CLKA 01 posedge  tch_tds_rise)
hold (DA[3] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[3] => CLKA 10 posedge  tch_tds_fall)
hold (DA[3] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[4] => CLKA 01 posedge  tch_tds_rise)
hold (DA[4] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[4] => CLKA 10 posedge  tch_tds_fall)
hold (DA[4] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[5] => CLKA 01 posedge  tch_tds_rise)
hold (DA[5] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[5] => CLKA 10 posedge  tch_tds_fall)
hold (DA[5] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[6] => CLKA 01 posedge  tch_tds_rise)
hold (DA[6] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[6] => CLKA 10 posedge  tch_tds_fall)
hold (DA[6] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[7] => CLKA 01 posedge  tch_tds_rise)
hold (DA[7] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[7] => CLKA 10 posedge  tch_tds_fall)
hold (DA[7] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[8] => CLKA 01 posedge  tch_tds_rise)
hold (DA[8] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[8] => CLKA 10 posedge  tch_tds_fall)
hold (DA[8] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[9] => CLKA 01 posedge  tch_tds_rise)
hold (DA[9] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[9] => CLKA 10 posedge  tch_tds_fall)
hold (DA[9] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[10] => CLKA 01 posedge  tch_tds_rise)
hold (DA[10] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[10] => CLKA 10 posedge  tch_tds_fall)
hold (DA[10] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[11] => CLKA 01 posedge  tch_tds_rise)
hold (DA[11] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[11] => CLKA 10 posedge  tch_tds_fall)
hold (DA[11] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[12] => CLKA 01 posedge  tch_tds_rise)
hold (DA[12] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[12] => CLKA 10 posedge  tch_tds_fall)
hold (DA[12] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[13] => CLKA 01 posedge  tch_tds_rise)
hold (DA[13] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[13] => CLKA 10 posedge  tch_tds_fall)
hold (DA[13] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[14] => CLKA 01 posedge  tch_tds_rise)
hold (DA[14] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[14] => CLKA 10 posedge  tch_tds_fall)
hold (DA[14] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[15] => CLKA 01 posedge  tch_tds_rise)
hold (DA[15] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[15] => CLKA 10 posedge  tch_tds_fall)
hold (DA[15] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[16] => CLKA 01 posedge  tch_tds_rise)
hold (DA[16] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[16] => CLKA 10 posedge  tch_tds_fall)
hold (DA[16] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[17] => CLKA 01 posedge  tch_tds_rise)
hold (DA[17] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[17] => CLKA 10 posedge  tch_tds_fall)
hold (DA[17] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[18] => CLKA 01 posedge  tch_tds_rise)
hold (DA[18] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[18] => CLKA 10 posedge  tch_tds_fall)
hold (DA[18] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[19] => CLKA 01 posedge  tch_tds_rise)
hold (DA[19] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[19] => CLKA 10 posedge  tch_tds_fall)
hold (DA[19] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[20] => CLKA 01 posedge  tch_tds_rise)
hold (DA[20] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[20] => CLKA 10 posedge  tch_tds_fall)
hold (DA[20] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[21] => CLKA 01 posedge  tch_tds_rise)
hold (DA[21] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[21] => CLKA 10 posedge  tch_tds_fall)
hold (DA[21] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[22] => CLKA 01 posedge  tch_tds_rise)
hold (DA[22] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[22] => CLKA 10 posedge  tch_tds_fall)
hold (DA[22] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[23] => CLKA 01 posedge  tch_tds_rise)
hold (DA[23] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[23] => CLKA 10 posedge  tch_tds_fall)
hold (DA[23] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[24] => CLKA 01 posedge  tch_tds_rise)
hold (DA[24] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[24] => CLKA 10 posedge  tch_tds_fall)
hold (DA[24] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[25] => CLKA 01 posedge  tch_tds_rise)
hold (DA[25] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[25] => CLKA 10 posedge  tch_tds_fall)
hold (DA[25] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[26] => CLKA 01 posedge  tch_tds_rise)
hold (DA[26] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[26] => CLKA 10 posedge  tch_tds_fall)
hold (DA[26] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[27] => CLKA 01 posedge  tch_tds_rise)
hold (DA[27] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[27] => CLKA 10 posedge  tch_tds_fall)
hold (DA[27] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[28] => CLKA 01 posedge  tch_tds_rise)
hold (DA[28] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[28] => CLKA 10 posedge  tch_tds_fall)
hold (DA[28] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[29] => CLKA 01 posedge  tch_tds_rise)
hold (DA[29] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[29] => CLKA 10 posedge  tch_tds_fall)
hold (DA[29] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[30] => CLKA 01 posedge  tch_tds_rise)
hold (DA[30] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[30] => CLKA 10 posedge  tch_tds_fall)
hold (DA[30] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[31] => CLKA 01 posedge  tch_tds_rise)
hold (DA[31] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[31] => CLKA 10 posedge  tch_tds_fall)
hold (DA[31] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[32] => CLKA 01 posedge  tch_tds_rise)
hold (DA[32] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[32] => CLKA 10 posedge  tch_tds_fall)
hold (DA[32] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[33] => CLKA 01 posedge  tch_tds_rise)
hold (DA[33] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[33] => CLKA 10 posedge  tch_tds_fall)
hold (DA[33] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[34] => CLKA 01 posedge  tch_tds_rise)
hold (DA[34] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[34] => CLKA 10 posedge  tch_tds_fall)
hold (DA[34] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[35] => CLKA 01 posedge  tch_tds_rise)
hold (DA[35] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[35] => CLKA 10 posedge  tch_tds_fall)
hold (DA[35] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[36] => CLKA 01 posedge  tch_tds_rise)
hold (DA[36] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[36] => CLKA 10 posedge  tch_tds_fall)
hold (DA[36] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[37] => CLKA 01 posedge  tch_tds_rise)
hold (DA[37] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[37] => CLKA 10 posedge  tch_tds_fall)
hold (DA[37] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[38] => CLKA 01 posedge  tch_tds_rise)
hold (DA[38] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[38] => CLKA 10 posedge  tch_tds_fall)
hold (DA[38] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[39] => CLKA 01 posedge  tch_tds_rise)
hold (DA[39] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[39] => CLKA 10 posedge  tch_tds_fall)
hold (DA[39] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[40] => CLKA 01 posedge  tch_tds_rise)
hold (DA[40] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[40] => CLKA 10 posedge  tch_tds_fall)
hold (DA[40] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[41] => CLKA 01 posedge  tch_tds_rise)
hold (DA[41] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[41] => CLKA 10 posedge  tch_tds_fall)
hold (DA[41] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[42] => CLKA 01 posedge  tch_tds_rise)
hold (DA[42] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[42] => CLKA 10 posedge  tch_tds_fall)
hold (DA[42] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[43] => CLKA 01 posedge  tch_tds_rise)
hold (DA[43] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[43] => CLKA 10 posedge  tch_tds_fall)
hold (DA[43] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[44] => CLKA 01 posedge  tch_tds_rise)
hold (DA[44] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[44] => CLKA 10 posedge  tch_tds_fall)
hold (DA[44] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[45] => CLKA 01 posedge  tch_tds_rise)
hold (DA[45] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[45] => CLKA 10 posedge  tch_tds_fall)
hold (DA[45] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[46] => CLKA 01 posedge  tch_tds_rise)
hold (DA[46] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[46] => CLKA 10 posedge  tch_tds_fall)
hold (DA[46] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[47] => CLKA 01 posedge  tch_tds_rise)
hold (DA[47] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[47] => CLKA 10 posedge  tch_tds_fall)
hold (DA[47] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[48] => CLKA 01 posedge  tch_tds_rise)
hold (DA[48] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[48] => CLKA 10 posedge  tch_tds_fall)
hold (DA[48] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[49] => CLKA 01 posedge  tch_tds_rise)
hold (DA[49] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[49] => CLKA 10 posedge  tch_tds_fall)
hold (DA[49] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[50] => CLKA 01 posedge  tch_tds_rise)
hold (DA[50] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[50] => CLKA 10 posedge  tch_tds_fall)
hold (DA[50] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[51] => CLKA 01 posedge  tch_tds_rise)
hold (DA[51] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[51] => CLKA 10 posedge  tch_tds_fall)
hold (DA[51] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[52] => CLKA 01 posedge  tch_tds_rise)
hold (DA[52] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[52] => CLKA 10 posedge  tch_tds_fall)
hold (DA[52] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[53] => CLKA 01 posedge  tch_tds_rise)
hold (DA[53] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[53] => CLKA 10 posedge  tch_tds_fall)
hold (DA[53] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[54] => CLKA 01 posedge  tch_tds_rise)
hold (DA[54] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[54] => CLKA 10 posedge  tch_tds_fall)
hold (DA[54] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[55] => CLKA 01 posedge  tch_tds_rise)
hold (DA[55] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[55] => CLKA 10 posedge  tch_tds_fall)
hold (DA[55] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[56] => CLKA 01 posedge  tch_tds_rise)
hold (DA[56] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[56] => CLKA 10 posedge  tch_tds_fall)
hold (DA[56] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[57] => CLKA 01 posedge  tch_tds_rise)
hold (DA[57] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[57] => CLKA 10 posedge  tch_tds_fall)
hold (DA[57] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[58] => CLKA 01 posedge  tch_tds_rise)
hold (DA[58] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[58] => CLKA 10 posedge  tch_tds_fall)
hold (DA[58] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[59] => CLKA 01 posedge  tch_tds_rise)
hold (DA[59] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[59] => CLKA 10 posedge  tch_tds_fall)
hold (DA[59] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[60] => CLKA 01 posedge  tch_tds_rise)
hold (DA[60] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[60] => CLKA 10 posedge  tch_tds_fall)
hold (DA[60] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[61] => CLKA 01 posedge  tch_tds_rise)
hold (DA[61] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[61] => CLKA 10 posedge  tch_tds_fall)
hold (DA[61] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[62] => CLKA 01 posedge  tch_tds_rise)
hold (DA[62] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[62] => CLKA 10 posedge  tch_tds_fall)
hold (DA[62] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[63] => CLKA 01 posedge  tch_tds_rise)
hold (DA[63] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[63] => CLKA 10 posedge  tch_tds_fall)
hold (DA[63] => CLKA 10 posedge  tch_tdh_fall )
setup (AA[0] => CLKA 01 posedge  tch_tas_rise)
hold (AA[0] => CLKA 01 posedge  tch_tah_rise )
setup (AA[0] => CLKA 10 posedge  tch_tas_fall)
hold (AA[0] => CLKA 10 posedge  tch_tah_fall )
setup (AA[1] => CLKA 01 posedge  tch_tas_rise)
hold (AA[1] => CLKA 01 posedge  tch_tah_rise )
setup (AA[1] => CLKA 10 posedge  tch_tas_fall)
hold (AA[1] => CLKA 10 posedge  tch_tah_fall )
setup (AA[2] => CLKA 01 posedge  tch_tas_rise)
hold (AA[2] => CLKA 01 posedge  tch_tah_rise )
setup (AA[2] => CLKA 10 posedge  tch_tas_fall)
hold (AA[2] => CLKA 10 posedge  tch_tah_fall )
setup (AA[3] => CLKA 01 posedge  tch_tas_rise)
hold (AA[3] => CLKA 01 posedge  tch_tah_rise )
setup (AA[3] => CLKA 10 posedge  tch_tas_fall)
hold (AA[3] => CLKA 10 posedge  tch_tah_fall )
setup (AA[4] => CLKA 01 posedge  tch_tas_rise)
hold (AA[4] => CLKA 01 posedge  tch_tah_rise )
setup (AA[4] => CLKA 10 posedge  tch_tas_fall)
hold (AA[4] => CLKA 10 posedge  tch_tah_fall )
setup (AA[5] => CLKA 01 posedge  tch_tas_rise)
hold (AA[5] => CLKA 01 posedge  tch_tah_rise )
setup (AA[5] => CLKA 10 posedge  tch_tas_fall)
hold (AA[5] => CLKA 10 posedge  tch_tah_fall )
setup (AA[6] => CLKA 01 posedge  tch_tas_rise)
hold (AA[6] => CLKA 01 posedge  tch_tah_rise )
setup (AA[6] => CLKA 10 posedge  tch_tas_fall)
hold (AA[6] => CLKA 10 posedge  tch_tah_fall )
setup (AA[7] => CLKA 01 posedge  tch_tas_rise)
hold (AA[7] => CLKA 01 posedge  tch_tah_rise )
setup (AA[7] => CLKA 10 posedge  tch_tas_fall)
hold (AA[7] => CLKA 10 posedge  tch_tah_fall )
setup (WENA => CLKA 01 posedge  tch_twens_rise)
hold (WENA => CLKA 01 posedge  tch_twenh_rise )
setup (WENA => CLKA 10 posedge  tch_twens_fall)
hold (WENA => CLKA 10 posedge  tch_twenh_fall )
setup (CENA => CLKA 01 posedge  tch_tcens_rise)
hold (CENA => CLKA 01 posedge  tch_tcenh_rise )
setup (CENA => CLKA 10 posedge  tch_tcens_fall)
hold (CENA => CLKA 10 posedge  tch_tcenh_fall )
mpwh   (CLKA     tpw_tckh)
mpwl   (CLKA     tpw_tckl)
period (CLKA 01  period_tcyc)
bus(QB[63:0] bustype(output)
 load_limit(warn(0.860) error(2.147483647e3))
 capacitance(0.000)
)
pin(CLKB pintype(input)
 capacitance(0.135)
)
pin(CENB pintype(input)
 capacitance(0.010)
)
pin(WENB pintype(input)
 capacitance(0.010)
)
bus(AB[7:0] bustype(input)
 capacitance(0.017)
)
bus(DB[63:0] bustype(input)
 capacitance(0.002)
)
path (CLKB => QB[0] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[0] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[1] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[1] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[2] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[2] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[3] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[3] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[4] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[4] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[5] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[5] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[6] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[6] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[7] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[7] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[8] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[8] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[9] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[9] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[10] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[10] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[11] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[11] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[12] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[12] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[13] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[13] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[14] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[14] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[15] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[15] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[16] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[16] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[17] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[17] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[18] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[18] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[19] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[19] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[20] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[20] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[21] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[21] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[22] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[22] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[23] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[23] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[24] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[24] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[25] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[25] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[26] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[26] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[27] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[27] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[28] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[28] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[29] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[29] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[30] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[30] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[31] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[31] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[32] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[32] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[33] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[33] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[34] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[34] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[35] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[35] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[36] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[36] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[37] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[37] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[38] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[38] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[39] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[39] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[40] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[40] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[41] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[41] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[42] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[42] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[43] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[43] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[44] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[44] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[45] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[45] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[46] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[46] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[47] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[47] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[48] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[48] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[49] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[49] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[50] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[50] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[51] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[51] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[52] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[52] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[53] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[53] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[54] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[54] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[55] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[55] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[56] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[56] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[57] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[57] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[58] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[58] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[59] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[59] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[60] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[60] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[61] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[61] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[62] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[62] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[63] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[63] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))

setup (DB[0] => CLKB 01 posedge  tch_tds_rise)
hold (DB[0] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[0] => CLKB 10 posedge  tch_tds_fall)
hold (DB[0] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[1] => CLKB 01 posedge  tch_tds_rise)
hold (DB[1] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[1] => CLKB 10 posedge  tch_tds_fall)
hold (DB[1] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[2] => CLKB 01 posedge  tch_tds_rise)
hold (DB[2] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[2] => CLKB 10 posedge  tch_tds_fall)
hold (DB[2] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[3] => CLKB 01 posedge  tch_tds_rise)
hold (DB[3] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[3] => CLKB 10 posedge  tch_tds_fall)
hold (DB[3] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[4] => CLKB 01 posedge  tch_tds_rise)
hold (DB[4] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[4] => CLKB 10 posedge  tch_tds_fall)
hold (DB[4] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[5] => CLKB 01 posedge  tch_tds_rise)
hold (DB[5] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[5] => CLKB 10 posedge  tch_tds_fall)
hold (DB[5] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[6] => CLKB 01 posedge  tch_tds_rise)
hold (DB[6] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[6] => CLKB 10 posedge  tch_tds_fall)
hold (DB[6] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[7] => CLKB 01 posedge  tch_tds_rise)
hold (DB[7] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[7] => CLKB 10 posedge  tch_tds_fall)
hold (DB[7] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[8] => CLKB 01 posedge  tch_tds_rise)
hold (DB[8] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[8] => CLKB 10 posedge  tch_tds_fall)
hold (DB[8] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[9] => CLKB 01 posedge  tch_tds_rise)
hold (DB[9] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[9] => CLKB 10 posedge  tch_tds_fall)
hold (DB[9] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[10] => CLKB 01 posedge  tch_tds_rise)
hold (DB[10] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[10] => CLKB 10 posedge  tch_tds_fall)
hold (DB[10] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[11] => CLKB 01 posedge  tch_tds_rise)
hold (DB[11] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[11] => CLKB 10 posedge  tch_tds_fall)
hold (DB[11] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[12] => CLKB 01 posedge  tch_tds_rise)
hold (DB[12] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[12] => CLKB 10 posedge  tch_tds_fall)
hold (DB[12] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[13] => CLKB 01 posedge  tch_tds_rise)
hold (DB[13] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[13] => CLKB 10 posedge  tch_tds_fall)
hold (DB[13] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[14] => CLKB 01 posedge  tch_tds_rise)
hold (DB[14] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[14] => CLKB 10 posedge  tch_tds_fall)
hold (DB[14] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[15] => CLKB 01 posedge  tch_tds_rise)
hold (DB[15] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[15] => CLKB 10 posedge  tch_tds_fall)
hold (DB[15] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[16] => CLKB 01 posedge  tch_tds_rise)
hold (DB[16] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[16] => CLKB 10 posedge  tch_tds_fall)
hold (DB[16] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[17] => CLKB 01 posedge  tch_tds_rise)
hold (DB[17] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[17] => CLKB 10 posedge  tch_tds_fall)
hold (DB[17] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[18] => CLKB 01 posedge  tch_tds_rise)
hold (DB[18] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[18] => CLKB 10 posedge  tch_tds_fall)
hold (DB[18] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[19] => CLKB 01 posedge  tch_tds_rise)
hold (DB[19] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[19] => CLKB 10 posedge  tch_tds_fall)
hold (DB[19] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[20] => CLKB 01 posedge  tch_tds_rise)
hold (DB[20] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[20] => CLKB 10 posedge  tch_tds_fall)
hold (DB[20] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[21] => CLKB 01 posedge  tch_tds_rise)
hold (DB[21] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[21] => CLKB 10 posedge  tch_tds_fall)
hold (DB[21] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[22] => CLKB 01 posedge  tch_tds_rise)
hold (DB[22] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[22] => CLKB 10 posedge  tch_tds_fall)
hold (DB[22] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[23] => CLKB 01 posedge  tch_tds_rise)
hold (DB[23] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[23] => CLKB 10 posedge  tch_tds_fall)
hold (DB[23] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[24] => CLKB 01 posedge  tch_tds_rise)
hold (DB[24] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[24] => CLKB 10 posedge  tch_tds_fall)
hold (DB[24] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[25] => CLKB 01 posedge  tch_tds_rise)
hold (DB[25] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[25] => CLKB 10 posedge  tch_tds_fall)
hold (DB[25] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[26] => CLKB 01 posedge  tch_tds_rise)
hold (DB[26] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[26] => CLKB 10 posedge  tch_tds_fall)
hold (DB[26] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[27] => CLKB 01 posedge  tch_tds_rise)
hold (DB[27] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[27] => CLKB 10 posedge  tch_tds_fall)
hold (DB[27] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[28] => CLKB 01 posedge  tch_tds_rise)
hold (DB[28] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[28] => CLKB 10 posedge  tch_tds_fall)
hold (DB[28] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[29] => CLKB 01 posedge  tch_tds_rise)
hold (DB[29] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[29] => CLKB 10 posedge  tch_tds_fall)
hold (DB[29] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[30] => CLKB 01 posedge  tch_tds_rise)
hold (DB[30] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[30] => CLKB 10 posedge  tch_tds_fall)
hold (DB[30] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[31] => CLKB 01 posedge  tch_tds_rise)
hold (DB[31] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[31] => CLKB 10 posedge  tch_tds_fall)
hold (DB[31] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[32] => CLKB 01 posedge  tch_tds_rise)
hold (DB[32] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[32] => CLKB 10 posedge  tch_tds_fall)
hold (DB[32] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[33] => CLKB 01 posedge  tch_tds_rise)
hold (DB[33] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[33] => CLKB 10 posedge  tch_tds_fall)
hold (DB[33] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[34] => CLKB 01 posedge  tch_tds_rise)
hold (DB[34] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[34] => CLKB 10 posedge  tch_tds_fall)
hold (DB[34] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[35] => CLKB 01 posedge  tch_tds_rise)
hold (DB[35] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[35] => CLKB 10 posedge  tch_tds_fall)
hold (DB[35] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[36] => CLKB 01 posedge  tch_tds_rise)
hold (DB[36] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[36] => CLKB 10 posedge  tch_tds_fall)
hold (DB[36] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[37] => CLKB 01 posedge  tch_tds_rise)
hold (DB[37] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[37] => CLKB 10 posedge  tch_tds_fall)
hold (DB[37] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[38] => CLKB 01 posedge  tch_tds_rise)
hold (DB[38] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[38] => CLKB 10 posedge  tch_tds_fall)
hold (DB[38] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[39] => CLKB 01 posedge  tch_tds_rise)
hold (DB[39] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[39] => CLKB 10 posedge  tch_tds_fall)
hold (DB[39] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[40] => CLKB 01 posedge  tch_tds_rise)
hold (DB[40] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[40] => CLKB 10 posedge  tch_tds_fall)
hold (DB[40] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[41] => CLKB 01 posedge  tch_tds_rise)
hold (DB[41] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[41] => CLKB 10 posedge  tch_tds_fall)
hold (DB[41] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[42] => CLKB 01 posedge  tch_tds_rise)
hold (DB[42] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[42] => CLKB 10 posedge  tch_tds_fall)
hold (DB[42] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[43] => CLKB 01 posedge  tch_tds_rise)
hold (DB[43] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[43] => CLKB 10 posedge  tch_tds_fall)
hold (DB[43] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[44] => CLKB 01 posedge  tch_tds_rise)
hold (DB[44] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[44] => CLKB 10 posedge  tch_tds_fall)
hold (DB[44] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[45] => CLKB 01 posedge  tch_tds_rise)
hold (DB[45] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[45] => CLKB 10 posedge  tch_tds_fall)
hold (DB[45] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[46] => CLKB 01 posedge  tch_tds_rise)
hold (DB[46] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[46] => CLKB 10 posedge  tch_tds_fall)
hold (DB[46] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[47] => CLKB 01 posedge  tch_tds_rise)
hold (DB[47] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[47] => CLKB 10 posedge  tch_tds_fall)
hold (DB[47] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[48] => CLKB 01 posedge  tch_tds_rise)
hold (DB[48] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[48] => CLKB 10 posedge  tch_tds_fall)
hold (DB[48] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[49] => CLKB 01 posedge  tch_tds_rise)
hold (DB[49] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[49] => CLKB 10 posedge  tch_tds_fall)
hold (DB[49] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[50] => CLKB 01 posedge  tch_tds_rise)
hold (DB[50] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[50] => CLKB 10 posedge  tch_tds_fall)
hold (DB[50] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[51] => CLKB 01 posedge  tch_tds_rise)
hold (DB[51] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[51] => CLKB 10 posedge  tch_tds_fall)
hold (DB[51] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[52] => CLKB 01 posedge  tch_tds_rise)
hold (DB[52] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[52] => CLKB 10 posedge  tch_tds_fall)
hold (DB[52] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[53] => CLKB 01 posedge  tch_tds_rise)
hold (DB[53] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[53] => CLKB 10 posedge  tch_tds_fall)
hold (DB[53] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[54] => CLKB 01 posedge  tch_tds_rise)
hold (DB[54] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[54] => CLKB 10 posedge  tch_tds_fall)
hold (DB[54] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[55] => CLKB 01 posedge  tch_tds_rise)
hold (DB[55] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[55] => CLKB 10 posedge  tch_tds_fall)
hold (DB[55] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[56] => CLKB 01 posedge  tch_tds_rise)
hold (DB[56] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[56] => CLKB 10 posedge  tch_tds_fall)
hold (DB[56] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[57] => CLKB 01 posedge  tch_tds_rise)
hold (DB[57] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[57] => CLKB 10 posedge  tch_tds_fall)
hold (DB[57] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[58] => CLKB 01 posedge  tch_tds_rise)
hold (DB[58] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[58] => CLKB 10 posedge  tch_tds_fall)
hold (DB[58] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[59] => CLKB 01 posedge  tch_tds_rise)
hold (DB[59] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[59] => CLKB 10 posedge  tch_tds_fall)
hold (DB[59] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[60] => CLKB 01 posedge  tch_tds_rise)
hold (DB[60] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[60] => CLKB 10 posedge  tch_tds_fall)
hold (DB[60] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[61] => CLKB 01 posedge  tch_tds_rise)
hold (DB[61] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[61] => CLKB 10 posedge  tch_tds_fall)
hold (DB[61] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[62] => CLKB 01 posedge  tch_tds_rise)
hold (DB[62] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[62] => CLKB 10 posedge  tch_tds_fall)
hold (DB[62] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[63] => CLKB 01 posedge  tch_tds_rise)
hold (DB[63] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[63] => CLKB 10 posedge  tch_tds_fall)
hold (DB[63] => CLKB 10 posedge  tch_tdh_fall )
setup (AB[0] => CLKB 01 posedge  tch_tas_rise)
hold (AB[0] => CLKB 01 posedge  tch_tah_rise )
setup (AB[0] => CLKB 10 posedge  tch_tas_fall)
hold (AB[0] => CLKB 10 posedge  tch_tah_fall )
setup (AB[1] => CLKB 01 posedge  tch_tas_rise)
hold (AB[1] => CLKB 01 posedge  tch_tah_rise )
setup (AB[1] => CLKB 10 posedge  tch_tas_fall)
hold (AB[1] => CLKB 10 posedge  tch_tah_fall )
setup (AB[2] => CLKB 01 posedge  tch_tas_rise)
hold (AB[2] => CLKB 01 posedge  tch_tah_rise )
setup (AB[2] => CLKB 10 posedge  tch_tas_fall)
hold (AB[2] => CLKB 10 posedge  tch_tah_fall )
setup (AB[3] => CLKB 01 posedge  tch_tas_rise)
hold (AB[3] => CLKB 01 posedge  tch_tah_rise )
setup (AB[3] => CLKB 10 posedge  tch_tas_fall)
hold (AB[3] => CLKB 10 posedge  tch_tah_fall )
setup (AB[4] => CLKB 01 posedge  tch_tas_rise)
hold (AB[4] => CLKB 01 posedge  tch_tah_rise )
setup (AB[4] => CLKB 10 posedge  tch_tas_fall)
hold (AB[4] => CLKB 10 posedge  tch_tah_fall )
setup (AB[5] => CLKB 01 posedge  tch_tas_rise)
hold (AB[5] => CLKB 01 posedge  tch_tah_rise )
setup (AB[5] => CLKB 10 posedge  tch_tas_fall)
hold (AB[5] => CLKB 10 posedge  tch_tah_fall )
setup (AB[6] => CLKB 01 posedge  tch_tas_rise)
hold (AB[6] => CLKB 01 posedge  tch_tah_rise )
setup (AB[6] => CLKB 10 posedge  tch_tas_fall)
hold (AB[6] => CLKB 10 posedge  tch_tah_fall )
setup (AB[7] => CLKB 01 posedge  tch_tas_rise)
hold (AB[7] => CLKB 01 posedge  tch_tah_rise )
setup (AB[7] => CLKB 10 posedge  tch_tas_fall)
hold (AB[7] => CLKB 10 posedge  tch_tah_fall )
setup (WENB => CLKB 01 posedge  tch_twens_rise)
hold (WENB => CLKB 01 posedge  tch_twenh_rise )
setup (WENB => CLKB 10 posedge  tch_twens_fall)
hold (WENB => CLKB 10 posedge  tch_twenh_fall )
setup (CENB => CLKB 01 posedge  tch_tcens_rise)
hold (CENB => CLKB 01 posedge  tch_tcenh_rise )
setup (CENB => CLKB 10 posedge  tch_tcens_fall)
hold (CENB => CLKB 10 posedge  tch_tcenh_fall )
mpwh   (CLKB     tpw_tckh)
mpwl   (CLKB     tpw_tckl)
period (CLKB 01  period_tcyc)
setup (CLKA => CLKB 01 posedge tch_clkas_clkb_rise)
setup (CLKB => CLKA 01 posedge tch_clkbs_clka_rise)
)
