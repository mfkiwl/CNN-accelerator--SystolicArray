/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2020  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Dual Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname "CNN_outMEM" -words 512 -bits 64 -frequency 1 -ring_width 4.0 -mux 4 -write_mask off -wp_size 8 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -dpccm on -asvm on -libname USERLIB -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      TLF model for Synchronous Dual-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  CNN_outMEM
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Process:        ss_1p08v_125c
 *
 *      Creation Date:  2020-04-01 03:57:25Z
 *      Version:	2009Q1V1
 *
 *      Verified With: Cadence Central Delay Calculator
 *
 *      Modeling Assumptions: This memory model is written using TLF 3.0
 *          constructs.  Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2020-04-01 03:57:25Z")
  vendor("Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2020 ARM Physical IP, Inc.")
  environment("ss_1p08v_125c")
  technology("CMOS")
  version("2009Q1V1")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(125.000)
  voltage(1.080)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(1.500) error(1.500))
  load_limit(0.860) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(CNN_outMEM
Area (301565.846)
CT_TOLERANCE(0.108)
TIMING_model (tch_tcens_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (2.140:2.140:2.140 2.156:2.156:2.156 2.176:2.176:2.176 2.216:2.216:2.216 2.335:2.335:2.335 2.534:2.534:2.534 2.734:2.734:2.734)
         (2.124:2.124:2.124 2.140:2.140:2.140 2.160:2.160:2.160 2.200:2.200:2.200 2.319:2.319:2.319 2.519:2.519:2.519 2.718:2.718:2.718)
         (2.104:2.104:2.104 2.120:2.120:2.120 2.140:2.140:2.140 2.180:2.180:2.180 2.300:2.300:2.300 2.499:2.499:2.499 2.698:2.698:2.698)
         (2.065:2.065:2.065 2.081:2.081:2.081 2.100:2.100:2.100 2.140:2.140:2.140 2.260:2.260:2.260 2.459:2.459:2.459 2.658:2.658:2.658)
         (1.945:1.945:1.945 1.961:1.961:1.961 1.981:1.981:1.981 2.021:2.021:2.021 2.140:2.140:2.140 2.340:2.340:2.340 2.539:2.539:2.539)
         (1.746:1.746:1.746 1.762:1.762:1.762 1.782:1.782:1.782 1.822:1.822:1.822 1.941:1.941:1.941 2.141:2.141:2.141 2.340:2.340:2.340)
         (1.547:1.547:1.547 1.563:1.563:1.563 1.583:1.583:1.583 1.623:1.623:1.623 1.743:1.743:1.743 1.942:1.942:1.942 2.141:2.141:2.141)
       )))
TIMING_model (tch_tcens_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.867:1.867:1.867 1.879:1.879:1.879 1.895:1.895:1.895 1.927:1.927:1.927 2.022:2.022:2.022 2.182:2.182:2.182 2.341:2.341:2.341)
         (1.851:1.851:1.851 1.863:1.863:1.863 1.879:1.879:1.879 1.911:1.911:1.911 2.007:2.007:2.007 2.166:2.166:2.166 2.325:2.325:2.325)
         (1.831:1.831:1.831 1.843:1.843:1.843 1.859:1.859:1.859 1.891:1.891:1.891 1.987:1.987:1.987 2.146:2.146:2.146 2.305:2.305:2.305)
         (1.791:1.791:1.791 1.804:1.804:1.804 1.820:1.820:1.820 1.851:1.851:1.851 1.947:1.947:1.947 2.106:2.106:2.106 2.265:2.265:2.265)
         (1.672:1.672:1.672 1.684:1.684:1.684 1.700:1.700:1.700 1.732:1.732:1.732 1.828:1.828:1.828 1.987:1.987:1.987 2.146:2.146:2.146)
         (1.473:1.473:1.473 1.485:1.485:1.485 1.501:1.501:1.501 1.533:1.533:1.533 1.629:1.629:1.629 1.788:1.788:1.788 1.947:1.947:1.947)
         (1.274:1.274:1.274 1.287:1.287:1.287 1.302:1.302:1.302 1.334:1.334:1.334 1.430:1.430:1.430 1.589:1.589:1.589 1.748:1.748:1.748)
       )))
TIMING_model (tch_tcenh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.618:0.618:0.618 0.602:0.602:0.602 0.582:0.582:0.582 0.542:0.542:0.542 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
       )))
TIMING_model (tch_tcenh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
         (0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500 0.500:0.500:0.500)
       )))
TIMING_model (tch_twens_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (2.266:2.266:2.266 2.283:2.283:2.283 2.304:2.304:2.304 2.347:2.347:2.347 2.475:2.475:2.475 2.688:2.688:2.688 2.902:2.902:2.902)
         (2.250:2.250:2.250 2.267:2.267:2.267 2.288:2.288:2.288 2.331:2.331:2.331 2.459:2.459:2.459 2.672:2.672:2.672 2.886:2.886:2.886)
         (2.230:2.230:2.230 2.247:2.247:2.247 2.268:2.268:2.268 2.311:2.311:2.311 2.439:2.439:2.439 2.652:2.652:2.652 2.866:2.866:2.866)
         (2.190:2.190:2.190 2.207:2.207:2.207 2.229:2.229:2.229 2.271:2.271:2.271 2.399:2.399:2.399 2.613:2.613:2.613 2.826:2.826:2.826)
         (2.071:2.071:2.071 2.088:2.088:2.088 2.109:2.109:2.109 2.152:2.152:2.152 2.280:2.280:2.280 2.493:2.493:2.493 2.707:2.707:2.707)
         (1.872:1.872:1.872 1.889:1.889:1.889 1.910:1.910:1.910 1.953:1.953:1.953 2.081:2.081:2.081 2.294:2.294:2.294 2.508:2.508:2.508)
         (1.673:1.673:1.673 1.690:1.690:1.690 1.711:1.711:1.711 1.754:1.754:1.754 1.882:1.882:1.882 2.095:2.095:2.095 2.309:2.309:2.309)
       )))
TIMING_model (tch_twens_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (2.670:2.670:2.670 2.683:2.683:2.683 2.700:2.700:2.700 2.733:2.733:2.733 2.834:2.834:2.834 3.001:3.001:3.001 3.168:3.168:3.168)
         (2.654:2.654:2.654 2.667:2.667:2.667 2.684:2.684:2.684 2.717:2.717:2.717 2.818:2.818:2.818 2.985:2.985:2.985 3.152:3.152:3.152)
         (2.634:2.634:2.634 2.647:2.647:2.647 2.664:2.664:2.664 2.697:2.697:2.697 2.798:2.798:2.798 2.965:2.965:2.965 3.133:3.133:3.133)
         (2.594:2.594:2.594 2.607:2.607:2.607 2.624:2.624:2.624 2.658:2.658:2.658 2.758:2.758:2.758 2.925:2.925:2.925 3.093:3.093:3.093)
         (2.475:2.475:2.475 2.488:2.488:2.488 2.505:2.505:2.505 2.538:2.538:2.538 2.639:2.639:2.639 2.806:2.806:2.806 2.973:2.973:2.973)
         (2.276:2.276:2.276 2.289:2.289:2.289 2.306:2.306:2.306 2.339:2.339:2.339 2.440:2.440:2.440 2.607:2.607:2.607 2.774:2.774:2.774)
         (2.077:2.077:2.077 2.090:2.090:2.090 2.107:2.107:2.107 2.140:2.140:2.140 2.241:2.241:2.241 2.408:2.408:2.408 2.576:2.576:2.576)
       )))
TIMING_model (tch_twenh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_twenh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_tas_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.927:1.927:1.927 1.939:1.939:1.939 1.954:1.954:1.954 1.984:1.984:1.984 2.074:2.074:2.074 2.224:2.224:2.224 2.374:2.374:2.374)
         (1.911:1.911:1.911 1.923:1.923:1.923 1.938:1.938:1.938 1.968:1.968:1.968 2.058:2.058:2.058 2.208:2.208:2.208 2.358:2.358:2.358)
         (1.891:1.891:1.891 1.903:1.903:1.903 1.918:1.918:1.918 1.948:1.948:1.948 2.038:2.038:2.038 2.189:2.189:2.189 2.339:2.339:2.339)
         (1.852:1.852:1.852 1.864:1.864:1.864 1.879:1.879:1.879 1.909:1.909:1.909 1.999:1.999:1.999 2.149:2.149:2.149 2.299:2.299:2.299)
         (1.732:1.732:1.732 1.744:1.744:1.744 1.759:1.759:1.759 1.789:1.789:1.789 1.879:1.879:1.879 2.029:2.029:2.029 2.179:2.179:2.179)
         (1.533:1.533:1.533 1.545:1.545:1.545 1.560:1.560:1.560 1.590:1.590:1.590 1.680:1.680:1.680 1.830:1.830:1.830 1.981:1.981:1.981)
         (1.334:1.334:1.334 1.346:1.346:1.346 1.361:1.361:1.361 1.391:1.391:1.391 1.482:1.482:1.482 1.632:1.632:1.632 1.782:1.782:1.782)
       )))
TIMING_model (tch_tas_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.940:0.940:0.940 0.951:0.951:0.951 0.965:0.965:0.965 0.993:0.993:0.993 1.077:1.077:1.077 1.217:1.217:1.217 1.358:1.358:1.358)
         (0.924:0.924:0.924 0.935:0.935:0.935 0.949:0.949:0.949 0.977:0.977:0.977 1.061:1.061:1.061 1.202:1.202:1.202 1.342:1.342:1.342)
         (0.904:0.904:0.904 0.915:0.915:0.915 0.929:0.929:0.929 0.957:0.957:0.957 1.041:1.041:1.041 1.182:1.182:1.182 1.322:1.322:1.322)
         (0.864:0.864:0.864 0.875:0.875:0.875 0.889:0.889:0.889 0.917:0.917:0.917 1.002:1.002:1.002 1.142:1.142:1.142 1.282:1.282:1.282)
         (0.745:0.745:0.745 0.756:0.756:0.756 0.770:0.770:0.770 0.798:0.798:0.798 0.882:0.882:0.882 1.022:1.022:1.022 1.163:1.163:1.163)
         (0.546:0.546:0.546 0.557:0.557:0.557 0.571:0.571:0.571 0.599:0.599:0.599 0.683:0.683:0.683 0.824:0.824:0.824 0.964:0.964:0.964)
         (0.347:0.347:0.347 0.358:0.358:0.358 0.372:0.372:0.372 0.400:0.400:0.400 0.484:0.484:0.484 0.625:0.625:0.625 0.765:0.765:0.765)
       )))
TIMING_model (tch_tah_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.415:0.415:0.415 0.403:0.403:0.403 0.388:0.388:0.388 0.358:0.358:0.358 0.268:0.268:0.268 0.230:0.230:0.230 0.230:0.230:0.230)
       )))
TIMING_model (tch_tah_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.277:0.277:0.277 0.265:0.265:0.265 0.251:0.251:0.251 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.476:0.476:0.476 0.464:0.464:0.464 0.450:0.450:0.450 0.422:0.422:0.422 0.338:0.338:0.338 0.230:0.230:0.230 0.230:0.230:0.230)
         (0.674:0.674:0.674 0.663:0.663:0.663 0.649:0.649:0.649 0.621:0.621:0.621 0.537:0.537:0.537 0.397:0.397:0.397 0.256:0.256:0.256)
       )))
TIMING_model (tch_tds_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.794:1.794:1.794 1.807:1.807:1.807 1.824:1.824:1.824 1.857:1.857:1.857 1.956:1.956:1.956 2.122:2.122:2.122 2.287:2.287:2.287)
         (1.778:1.778:1.778 1.792:1.792:1.792 1.808:1.808:1.808 1.841:1.841:1.841 1.940:1.940:1.940 2.106:2.106:2.106 2.271:2.271:2.271)
         (1.758:1.758:1.758 1.772:1.772:1.772 1.788:1.788:1.788 1.821:1.821:1.821 1.920:1.920:1.920 2.086:2.086:2.086 2.251:2.251:2.251)
         (1.719:1.719:1.719 1.732:1.732:1.732 1.748:1.748:1.748 1.781:1.781:1.781 1.881:1.881:1.881 2.046:2.046:2.046 2.211:2.211:2.211)
         (1.599:1.599:1.599 1.612:1.612:1.612 1.629:1.629:1.629 1.662:1.662:1.662 1.761:1.761:1.761 1.927:1.927:1.927 2.092:2.092:2.092)
         (1.400:1.400:1.400 1.414:1.414:1.414 1.430:1.430:1.430 1.463:1.463:1.463 1.562:1.562:1.562 1.728:1.728:1.728 1.893:1.893:1.893)
         (1.201:1.201:1.201 1.215:1.215:1.215 1.231:1.231:1.231 1.264:1.264:1.264 1.364:1.364:1.364 1.529:1.529:1.529 1.694:1.694:1.694)
       )))
TIMING_model (tch_tds_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (1.894:1.894:1.894 1.908:1.908:1.908 1.927:1.927:1.927 1.964:1.964:1.964 2.074:2.074:2.074 2.257:2.257:2.257 2.441:2.441:2.441)
         (1.878:1.878:1.878 1.893:1.893:1.893 1.911:1.911:1.911 1.948:1.948:1.948 2.058:2.058:2.058 2.241:2.241:2.241 2.425:2.425:2.425)
         (1.858:1.858:1.858 1.873:1.873:1.873 1.891:1.891:1.891 1.928:1.928:1.928 2.038:2.038:2.038 2.221:2.221:2.221 2.405:2.405:2.405)
         (1.818:1.818:1.818 1.833:1.833:1.833 1.851:1.851:1.851 1.888:1.888:1.888 1.998:1.998:1.998 2.182:2.182:2.182 2.365:2.365:2.365)
         (1.699:1.699:1.699 1.714:1.714:1.714 1.732:1.732:1.732 1.769:1.769:1.769 1.879:1.879:1.879 2.062:2.062:2.062 2.246:2.246:2.246)
         (1.500:1.500:1.500 1.515:1.515:1.515 1.533:1.533:1.533 1.570:1.570:1.570 1.680:1.680:1.680 1.863:1.863:1.863 2.047:2.047:2.047)
         (1.301:1.301:1.301 1.316:1.316:1.316 1.334:1.334:1.334 1.371:1.371:1.371 1.481:1.481:1.481 1.664:1.664:1.664 1.848:1.848:1.848)
       )))
TIMING_model (tch_tdh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_tdh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.729:0.729:0.729 0.715:0.715:0.715 0.696:0.696:0.696 0.660:0.660:0.660 0.630:0.630:0.630 0.630:0.630:0.630 0.630:0.630:0.630)
         (0.928:0.928:0.928 0.914:0.914:0.914 0.895:0.895:0.895 0.859:0.859:0.859 0.748:0.748:0.748 0.630:0.630:0.630 0.630:0.630:0.630)
       )))
TIMING_model (tch_clkas_clkb_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
       )))
TIMING_model (tch_clkbs_clka_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
         (5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917 5.917:5.917:5.917)
       )))
TIMING_model (dly_clk_q_rise      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (7.062:7.062:7.062 7.151:7.151:7.151 7.239:7.239:7.239 7.416:7.416:7.416 7.887:7.887:7.887 8.712:8.712:8.712 9.595:9.595:9.595)
         (7.078:7.078:7.078 7.167:7.167:7.167 7.255:7.255:7.255 7.432:7.432:7.432 7.903:7.903:7.903 8.727:8.727:8.727 9.611:9.611:9.611)
         (7.098:7.098:7.098 7.186:7.186:7.186 7.275:7.275:7.275 7.451:7.451:7.451 7.923:7.923:7.923 8.747:8.747:8.747 9.631:9.631:9.631)
         (7.138:7.138:7.138 7.226:7.226:7.226 7.315:7.315:7.315 7.491:7.491:7.491 7.962:7.962:7.962 8.787:8.787:8.787 9.671:9.671:9.671)
         (7.257:7.257:7.257 7.346:7.346:7.346 7.434:7.434:7.434 7.611:7.611:7.611 8.082:8.082:8.082 8.906:8.906:8.906 9.790:9.790:9.790)
         (7.456:7.456:7.456 7.544:7.544:7.544 7.633:7.633:7.633 7.809:7.809:7.809 8.281:8.281:8.281 9.105:9.105:9.105 9.989:9.989:9.989)
         (7.655:7.655:7.655 7.743:7.743:7.743 7.832:7.832:7.832 8.008:8.008:8.008 8.480:8.480:8.480 9.304:9.304:9.304 10.188:10.188:10.188)
       )))
TIMING_model (dly_clk_q_fall      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (7.211:7.211:7.211 7.278:7.278:7.278 7.345:7.345:7.345 7.480:7.480:7.480 7.839:7.839:7.839 8.467:8.467:8.467 9.140:9.140:9.140)
         (7.227:7.227:7.227 7.294:7.294:7.294 7.361:7.361:7.361 7.496:7.496:7.496 7.855:7.855:7.855 8.483:8.483:8.483 9.156:9.156:9.156)
         (7.247:7.247:7.247 7.314:7.314:7.314 7.381:7.381:7.381 7.516:7.516:7.516 7.875:7.875:7.875 8.503:8.503:8.503 9.176:9.176:9.176)
         (7.286:7.286:7.286 7.354:7.354:7.354 7.421:7.421:7.421 7.556:7.556:7.556 7.915:7.915:7.915 8.543:8.543:8.543 9.216:9.216:9.216)
         (7.406:7.406:7.406 7.473:7.473:7.473 7.540:7.540:7.540 7.675:7.675:7.675 8.034:8.034:8.034 8.662:8.662:8.662 9.335:9.335:9.335)
         (7.605:7.605:7.605 7.672:7.672:7.672 7.739:7.739:7.739 7.874:7.874:7.874 8.233:8.233:8.233 8.861:8.861:8.861 9.534:9.534:9.534)
         (7.804:7.804:7.804 7.871:7.871:7.871 7.938:7.938:7.938 8.073:8.073:8.073 8.432:8.432:8.432 9.060:9.060:9.060 9.733:9.733:9.733)
       )))
TIMING_model (sl_q_rise      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.123:0.123:0.123 0.292:0.292:0.292 0.461:0.461:0.461 0.799:0.799:0.799 1.700:1.700:1.700 3.277:3.277:3.277 4.966:4.966:4.966))))
TIMING_model (sl_q_fall      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.147:0.147:0.147 0.276:0.276:0.276 0.405:0.405:0.405 0.663:0.663:0.663 1.352:1.352:1.352 2.558:2.558:2.558 3.850:3.850:3.850))))
TIMING_model (period_tcyc (const (7.572)))
TIMING_model (tpw_tckl (const (0.700)))
TIMING_model (tpw_tckh (const (0.469)))
bus(QA[63:0] bustype(output)
 load_limit(warn(0.860) error(2.147483647e3))
 capacitance(0.000)
)
pin(CLKA pintype(input)
 capacitance(0.135)
)
pin(CENA pintype(input)
 capacitance(0.010)
)
pin(WENA pintype(input)
 capacitance(0.010)
)
bus(AA[8:0] bustype(input)
 capacitance(0.017)
)
bus(DA[63:0] bustype(input)
 capacitance(0.002)
)
path (CLKA => QA[0] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[0] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[1] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[1] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[2] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[2] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[3] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[3] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[4] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[4] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[5] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[5] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[6] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[6] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[7] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[7] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[8] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[8] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[9] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[9] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[10] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[10] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[11] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[11] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[12] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[12] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[13] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[13] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[14] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[14] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[15] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[15] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[16] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[16] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[17] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[17] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[18] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[18] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[19] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[19] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[20] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[20] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[21] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[21] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[22] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[22] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[23] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[23] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[24] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[24] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[25] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[25] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[26] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[26] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[27] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[27] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[28] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[28] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[29] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[29] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[30] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[30] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[31] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[31] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[32] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[32] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[33] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[33] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[34] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[34] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[35] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[35] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[36] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[36] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[37] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[37] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[38] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[38] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[39] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[39] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[40] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[40] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[41] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[41] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[42] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[42] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[43] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[43] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[44] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[44] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[45] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[45] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[46] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[46] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[47] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[47] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[48] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[48] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[49] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[49] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[50] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[50] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[51] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[51] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[52] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[52] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[53] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[53] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[54] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[54] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[55] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[55] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[56] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[56] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[57] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[57] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[58] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[58] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[59] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[59] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[60] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[60] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[61] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[61] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[62] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[62] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[63] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[63] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))

setup (DA[0] => CLKA 01 posedge  tch_tds_rise)
hold (DA[0] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[0] => CLKA 10 posedge  tch_tds_fall)
hold (DA[0] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[1] => CLKA 01 posedge  tch_tds_rise)
hold (DA[1] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[1] => CLKA 10 posedge  tch_tds_fall)
hold (DA[1] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[2] => CLKA 01 posedge  tch_tds_rise)
hold (DA[2] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[2] => CLKA 10 posedge  tch_tds_fall)
hold (DA[2] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[3] => CLKA 01 posedge  tch_tds_rise)
hold (DA[3] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[3] => CLKA 10 posedge  tch_tds_fall)
hold (DA[3] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[4] => CLKA 01 posedge  tch_tds_rise)
hold (DA[4] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[4] => CLKA 10 posedge  tch_tds_fall)
hold (DA[4] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[5] => CLKA 01 posedge  tch_tds_rise)
hold (DA[5] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[5] => CLKA 10 posedge  tch_tds_fall)
hold (DA[5] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[6] => CLKA 01 posedge  tch_tds_rise)
hold (DA[6] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[6] => CLKA 10 posedge  tch_tds_fall)
hold (DA[6] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[7] => CLKA 01 posedge  tch_tds_rise)
hold (DA[7] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[7] => CLKA 10 posedge  tch_tds_fall)
hold (DA[7] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[8] => CLKA 01 posedge  tch_tds_rise)
hold (DA[8] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[8] => CLKA 10 posedge  tch_tds_fall)
hold (DA[8] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[9] => CLKA 01 posedge  tch_tds_rise)
hold (DA[9] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[9] => CLKA 10 posedge  tch_tds_fall)
hold (DA[9] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[10] => CLKA 01 posedge  tch_tds_rise)
hold (DA[10] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[10] => CLKA 10 posedge  tch_tds_fall)
hold (DA[10] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[11] => CLKA 01 posedge  tch_tds_rise)
hold (DA[11] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[11] => CLKA 10 posedge  tch_tds_fall)
hold (DA[11] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[12] => CLKA 01 posedge  tch_tds_rise)
hold (DA[12] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[12] => CLKA 10 posedge  tch_tds_fall)
hold (DA[12] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[13] => CLKA 01 posedge  tch_tds_rise)
hold (DA[13] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[13] => CLKA 10 posedge  tch_tds_fall)
hold (DA[13] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[14] => CLKA 01 posedge  tch_tds_rise)
hold (DA[14] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[14] => CLKA 10 posedge  tch_tds_fall)
hold (DA[14] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[15] => CLKA 01 posedge  tch_tds_rise)
hold (DA[15] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[15] => CLKA 10 posedge  tch_tds_fall)
hold (DA[15] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[16] => CLKA 01 posedge  tch_tds_rise)
hold (DA[16] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[16] => CLKA 10 posedge  tch_tds_fall)
hold (DA[16] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[17] => CLKA 01 posedge  tch_tds_rise)
hold (DA[17] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[17] => CLKA 10 posedge  tch_tds_fall)
hold (DA[17] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[18] => CLKA 01 posedge  tch_tds_rise)
hold (DA[18] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[18] => CLKA 10 posedge  tch_tds_fall)
hold (DA[18] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[19] => CLKA 01 posedge  tch_tds_rise)
hold (DA[19] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[19] => CLKA 10 posedge  tch_tds_fall)
hold (DA[19] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[20] => CLKA 01 posedge  tch_tds_rise)
hold (DA[20] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[20] => CLKA 10 posedge  tch_tds_fall)
hold (DA[20] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[21] => CLKA 01 posedge  tch_tds_rise)
hold (DA[21] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[21] => CLKA 10 posedge  tch_tds_fall)
hold (DA[21] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[22] => CLKA 01 posedge  tch_tds_rise)
hold (DA[22] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[22] => CLKA 10 posedge  tch_tds_fall)
hold (DA[22] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[23] => CLKA 01 posedge  tch_tds_rise)
hold (DA[23] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[23] => CLKA 10 posedge  tch_tds_fall)
hold (DA[23] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[24] => CLKA 01 posedge  tch_tds_rise)
hold (DA[24] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[24] => CLKA 10 posedge  tch_tds_fall)
hold (DA[24] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[25] => CLKA 01 posedge  tch_tds_rise)
hold (DA[25] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[25] => CLKA 10 posedge  tch_tds_fall)
hold (DA[25] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[26] => CLKA 01 posedge  tch_tds_rise)
hold (DA[26] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[26] => CLKA 10 posedge  tch_tds_fall)
hold (DA[26] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[27] => CLKA 01 posedge  tch_tds_rise)
hold (DA[27] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[27] => CLKA 10 posedge  tch_tds_fall)
hold (DA[27] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[28] => CLKA 01 posedge  tch_tds_rise)
hold (DA[28] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[28] => CLKA 10 posedge  tch_tds_fall)
hold (DA[28] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[29] => CLKA 01 posedge  tch_tds_rise)
hold (DA[29] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[29] => CLKA 10 posedge  tch_tds_fall)
hold (DA[29] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[30] => CLKA 01 posedge  tch_tds_rise)
hold (DA[30] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[30] => CLKA 10 posedge  tch_tds_fall)
hold (DA[30] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[31] => CLKA 01 posedge  tch_tds_rise)
hold (DA[31] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[31] => CLKA 10 posedge  tch_tds_fall)
hold (DA[31] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[32] => CLKA 01 posedge  tch_tds_rise)
hold (DA[32] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[32] => CLKA 10 posedge  tch_tds_fall)
hold (DA[32] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[33] => CLKA 01 posedge  tch_tds_rise)
hold (DA[33] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[33] => CLKA 10 posedge  tch_tds_fall)
hold (DA[33] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[34] => CLKA 01 posedge  tch_tds_rise)
hold (DA[34] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[34] => CLKA 10 posedge  tch_tds_fall)
hold (DA[34] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[35] => CLKA 01 posedge  tch_tds_rise)
hold (DA[35] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[35] => CLKA 10 posedge  tch_tds_fall)
hold (DA[35] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[36] => CLKA 01 posedge  tch_tds_rise)
hold (DA[36] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[36] => CLKA 10 posedge  tch_tds_fall)
hold (DA[36] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[37] => CLKA 01 posedge  tch_tds_rise)
hold (DA[37] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[37] => CLKA 10 posedge  tch_tds_fall)
hold (DA[37] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[38] => CLKA 01 posedge  tch_tds_rise)
hold (DA[38] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[38] => CLKA 10 posedge  tch_tds_fall)
hold (DA[38] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[39] => CLKA 01 posedge  tch_tds_rise)
hold (DA[39] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[39] => CLKA 10 posedge  tch_tds_fall)
hold (DA[39] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[40] => CLKA 01 posedge  tch_tds_rise)
hold (DA[40] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[40] => CLKA 10 posedge  tch_tds_fall)
hold (DA[40] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[41] => CLKA 01 posedge  tch_tds_rise)
hold (DA[41] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[41] => CLKA 10 posedge  tch_tds_fall)
hold (DA[41] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[42] => CLKA 01 posedge  tch_tds_rise)
hold (DA[42] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[42] => CLKA 10 posedge  tch_tds_fall)
hold (DA[42] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[43] => CLKA 01 posedge  tch_tds_rise)
hold (DA[43] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[43] => CLKA 10 posedge  tch_tds_fall)
hold (DA[43] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[44] => CLKA 01 posedge  tch_tds_rise)
hold (DA[44] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[44] => CLKA 10 posedge  tch_tds_fall)
hold (DA[44] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[45] => CLKA 01 posedge  tch_tds_rise)
hold (DA[45] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[45] => CLKA 10 posedge  tch_tds_fall)
hold (DA[45] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[46] => CLKA 01 posedge  tch_tds_rise)
hold (DA[46] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[46] => CLKA 10 posedge  tch_tds_fall)
hold (DA[46] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[47] => CLKA 01 posedge  tch_tds_rise)
hold (DA[47] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[47] => CLKA 10 posedge  tch_tds_fall)
hold (DA[47] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[48] => CLKA 01 posedge  tch_tds_rise)
hold (DA[48] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[48] => CLKA 10 posedge  tch_tds_fall)
hold (DA[48] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[49] => CLKA 01 posedge  tch_tds_rise)
hold (DA[49] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[49] => CLKA 10 posedge  tch_tds_fall)
hold (DA[49] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[50] => CLKA 01 posedge  tch_tds_rise)
hold (DA[50] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[50] => CLKA 10 posedge  tch_tds_fall)
hold (DA[50] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[51] => CLKA 01 posedge  tch_tds_rise)
hold (DA[51] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[51] => CLKA 10 posedge  tch_tds_fall)
hold (DA[51] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[52] => CLKA 01 posedge  tch_tds_rise)
hold (DA[52] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[52] => CLKA 10 posedge  tch_tds_fall)
hold (DA[52] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[53] => CLKA 01 posedge  tch_tds_rise)
hold (DA[53] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[53] => CLKA 10 posedge  tch_tds_fall)
hold (DA[53] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[54] => CLKA 01 posedge  tch_tds_rise)
hold (DA[54] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[54] => CLKA 10 posedge  tch_tds_fall)
hold (DA[54] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[55] => CLKA 01 posedge  tch_tds_rise)
hold (DA[55] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[55] => CLKA 10 posedge  tch_tds_fall)
hold (DA[55] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[56] => CLKA 01 posedge  tch_tds_rise)
hold (DA[56] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[56] => CLKA 10 posedge  tch_tds_fall)
hold (DA[56] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[57] => CLKA 01 posedge  tch_tds_rise)
hold (DA[57] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[57] => CLKA 10 posedge  tch_tds_fall)
hold (DA[57] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[58] => CLKA 01 posedge  tch_tds_rise)
hold (DA[58] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[58] => CLKA 10 posedge  tch_tds_fall)
hold (DA[58] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[59] => CLKA 01 posedge  tch_tds_rise)
hold (DA[59] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[59] => CLKA 10 posedge  tch_tds_fall)
hold (DA[59] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[60] => CLKA 01 posedge  tch_tds_rise)
hold (DA[60] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[60] => CLKA 10 posedge  tch_tds_fall)
hold (DA[60] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[61] => CLKA 01 posedge  tch_tds_rise)
hold (DA[61] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[61] => CLKA 10 posedge  tch_tds_fall)
hold (DA[61] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[62] => CLKA 01 posedge  tch_tds_rise)
hold (DA[62] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[62] => CLKA 10 posedge  tch_tds_fall)
hold (DA[62] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[63] => CLKA 01 posedge  tch_tds_rise)
hold (DA[63] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[63] => CLKA 10 posedge  tch_tds_fall)
hold (DA[63] => CLKA 10 posedge  tch_tdh_fall )
setup (AA[0] => CLKA 01 posedge  tch_tas_rise)
hold (AA[0] => CLKA 01 posedge  tch_tah_rise )
setup (AA[0] => CLKA 10 posedge  tch_tas_fall)
hold (AA[0] => CLKA 10 posedge  tch_tah_fall )
setup (AA[1] => CLKA 01 posedge  tch_tas_rise)
hold (AA[1] => CLKA 01 posedge  tch_tah_rise )
setup (AA[1] => CLKA 10 posedge  tch_tas_fall)
hold (AA[1] => CLKA 10 posedge  tch_tah_fall )
setup (AA[2] => CLKA 01 posedge  tch_tas_rise)
hold (AA[2] => CLKA 01 posedge  tch_tah_rise )
setup (AA[2] => CLKA 10 posedge  tch_tas_fall)
hold (AA[2] => CLKA 10 posedge  tch_tah_fall )
setup (AA[3] => CLKA 01 posedge  tch_tas_rise)
hold (AA[3] => CLKA 01 posedge  tch_tah_rise )
setup (AA[3] => CLKA 10 posedge  tch_tas_fall)
hold (AA[3] => CLKA 10 posedge  tch_tah_fall )
setup (AA[4] => CLKA 01 posedge  tch_tas_rise)
hold (AA[4] => CLKA 01 posedge  tch_tah_rise )
setup (AA[4] => CLKA 10 posedge  tch_tas_fall)
hold (AA[4] => CLKA 10 posedge  tch_tah_fall )
setup (AA[5] => CLKA 01 posedge  tch_tas_rise)
hold (AA[5] => CLKA 01 posedge  tch_tah_rise )
setup (AA[5] => CLKA 10 posedge  tch_tas_fall)
hold (AA[5] => CLKA 10 posedge  tch_tah_fall )
setup (AA[6] => CLKA 01 posedge  tch_tas_rise)
hold (AA[6] => CLKA 01 posedge  tch_tah_rise )
setup (AA[6] => CLKA 10 posedge  tch_tas_fall)
hold (AA[6] => CLKA 10 posedge  tch_tah_fall )
setup (AA[7] => CLKA 01 posedge  tch_tas_rise)
hold (AA[7] => CLKA 01 posedge  tch_tah_rise )
setup (AA[7] => CLKA 10 posedge  tch_tas_fall)
hold (AA[7] => CLKA 10 posedge  tch_tah_fall )
setup (AA[8] => CLKA 01 posedge  tch_tas_rise)
hold (AA[8] => CLKA 01 posedge  tch_tah_rise )
setup (AA[8] => CLKA 10 posedge  tch_tas_fall)
hold (AA[8] => CLKA 10 posedge  tch_tah_fall )
setup (WENA => CLKA 01 posedge  tch_twens_rise)
hold (WENA => CLKA 01 posedge  tch_twenh_rise )
setup (WENA => CLKA 10 posedge  tch_twens_fall)
hold (WENA => CLKA 10 posedge  tch_twenh_fall )
setup (CENA => CLKA 01 posedge  tch_tcens_rise)
hold (CENA => CLKA 01 posedge  tch_tcenh_rise )
setup (CENA => CLKA 10 posedge  tch_tcens_fall)
hold (CENA => CLKA 10 posedge  tch_tcenh_fall )
mpwh   (CLKA     tpw_tckh)
mpwl   (CLKA     tpw_tckl)
period (CLKA 01  period_tcyc)
bus(QB[63:0] bustype(output)
 load_limit(warn(0.860) error(2.147483647e3))
 capacitance(0.000)
)
pin(CLKB pintype(input)
 capacitance(0.135)
)
pin(CENB pintype(input)
 capacitance(0.010)
)
pin(WENB pintype(input)
 capacitance(0.010)
)
bus(AB[8:0] bustype(input)
 capacitance(0.017)
)
bus(DB[63:0] bustype(input)
 capacitance(0.002)
)
path (CLKB => QB[0] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[0] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[1] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[1] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[2] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[2] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[3] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[3] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[4] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[4] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[5] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[5] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[6] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[6] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[7] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[7] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[8] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[8] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[9] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[9] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[10] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[10] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[11] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[11] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[12] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[12] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[13] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[13] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[14] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[14] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[15] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[15] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[16] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[16] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[17] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[17] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[18] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[18] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[19] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[19] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[20] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[20] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[21] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[21] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[22] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[22] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[23] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[23] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[24] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[24] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[25] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[25] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[26] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[26] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[27] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[27] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[28] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[28] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[29] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[29] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[30] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[30] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[31] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[31] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[32] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[32] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[33] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[33] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[34] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[34] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[35] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[35] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[36] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[36] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[37] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[37] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[38] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[38] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[39] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[39] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[40] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[40] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[41] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[41] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[42] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[42] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[43] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[43] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[44] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[44] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[45] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[45] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[46] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[46] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[47] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[47] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[48] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[48] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[49] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[49] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[50] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[50] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[51] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[51] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[52] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[52] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[53] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[53] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[54] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[54] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[55] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[55] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[56] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[56] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[57] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[57] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[58] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[58] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[59] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[59] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[60] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[60] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[61] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[61] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[62] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[62] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[63] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[63] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))

setup (DB[0] => CLKB 01 posedge  tch_tds_rise)
hold (DB[0] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[0] => CLKB 10 posedge  tch_tds_fall)
hold (DB[0] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[1] => CLKB 01 posedge  tch_tds_rise)
hold (DB[1] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[1] => CLKB 10 posedge  tch_tds_fall)
hold (DB[1] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[2] => CLKB 01 posedge  tch_tds_rise)
hold (DB[2] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[2] => CLKB 10 posedge  tch_tds_fall)
hold (DB[2] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[3] => CLKB 01 posedge  tch_tds_rise)
hold (DB[3] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[3] => CLKB 10 posedge  tch_tds_fall)
hold (DB[3] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[4] => CLKB 01 posedge  tch_tds_rise)
hold (DB[4] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[4] => CLKB 10 posedge  tch_tds_fall)
hold (DB[4] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[5] => CLKB 01 posedge  tch_tds_rise)
hold (DB[5] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[5] => CLKB 10 posedge  tch_tds_fall)
hold (DB[5] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[6] => CLKB 01 posedge  tch_tds_rise)
hold (DB[6] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[6] => CLKB 10 posedge  tch_tds_fall)
hold (DB[6] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[7] => CLKB 01 posedge  tch_tds_rise)
hold (DB[7] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[7] => CLKB 10 posedge  tch_tds_fall)
hold (DB[7] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[8] => CLKB 01 posedge  tch_tds_rise)
hold (DB[8] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[8] => CLKB 10 posedge  tch_tds_fall)
hold (DB[8] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[9] => CLKB 01 posedge  tch_tds_rise)
hold (DB[9] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[9] => CLKB 10 posedge  tch_tds_fall)
hold (DB[9] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[10] => CLKB 01 posedge  tch_tds_rise)
hold (DB[10] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[10] => CLKB 10 posedge  tch_tds_fall)
hold (DB[10] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[11] => CLKB 01 posedge  tch_tds_rise)
hold (DB[11] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[11] => CLKB 10 posedge  tch_tds_fall)
hold (DB[11] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[12] => CLKB 01 posedge  tch_tds_rise)
hold (DB[12] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[12] => CLKB 10 posedge  tch_tds_fall)
hold (DB[12] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[13] => CLKB 01 posedge  tch_tds_rise)
hold (DB[13] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[13] => CLKB 10 posedge  tch_tds_fall)
hold (DB[13] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[14] => CLKB 01 posedge  tch_tds_rise)
hold (DB[14] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[14] => CLKB 10 posedge  tch_tds_fall)
hold (DB[14] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[15] => CLKB 01 posedge  tch_tds_rise)
hold (DB[15] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[15] => CLKB 10 posedge  tch_tds_fall)
hold (DB[15] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[16] => CLKB 01 posedge  tch_tds_rise)
hold (DB[16] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[16] => CLKB 10 posedge  tch_tds_fall)
hold (DB[16] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[17] => CLKB 01 posedge  tch_tds_rise)
hold (DB[17] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[17] => CLKB 10 posedge  tch_tds_fall)
hold (DB[17] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[18] => CLKB 01 posedge  tch_tds_rise)
hold (DB[18] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[18] => CLKB 10 posedge  tch_tds_fall)
hold (DB[18] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[19] => CLKB 01 posedge  tch_tds_rise)
hold (DB[19] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[19] => CLKB 10 posedge  tch_tds_fall)
hold (DB[19] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[20] => CLKB 01 posedge  tch_tds_rise)
hold (DB[20] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[20] => CLKB 10 posedge  tch_tds_fall)
hold (DB[20] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[21] => CLKB 01 posedge  tch_tds_rise)
hold (DB[21] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[21] => CLKB 10 posedge  tch_tds_fall)
hold (DB[21] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[22] => CLKB 01 posedge  tch_tds_rise)
hold (DB[22] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[22] => CLKB 10 posedge  tch_tds_fall)
hold (DB[22] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[23] => CLKB 01 posedge  tch_tds_rise)
hold (DB[23] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[23] => CLKB 10 posedge  tch_tds_fall)
hold (DB[23] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[24] => CLKB 01 posedge  tch_tds_rise)
hold (DB[24] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[24] => CLKB 10 posedge  tch_tds_fall)
hold (DB[24] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[25] => CLKB 01 posedge  tch_tds_rise)
hold (DB[25] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[25] => CLKB 10 posedge  tch_tds_fall)
hold (DB[25] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[26] => CLKB 01 posedge  tch_tds_rise)
hold (DB[26] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[26] => CLKB 10 posedge  tch_tds_fall)
hold (DB[26] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[27] => CLKB 01 posedge  tch_tds_rise)
hold (DB[27] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[27] => CLKB 10 posedge  tch_tds_fall)
hold (DB[27] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[28] => CLKB 01 posedge  tch_tds_rise)
hold (DB[28] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[28] => CLKB 10 posedge  tch_tds_fall)
hold (DB[28] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[29] => CLKB 01 posedge  tch_tds_rise)
hold (DB[29] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[29] => CLKB 10 posedge  tch_tds_fall)
hold (DB[29] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[30] => CLKB 01 posedge  tch_tds_rise)
hold (DB[30] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[30] => CLKB 10 posedge  tch_tds_fall)
hold (DB[30] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[31] => CLKB 01 posedge  tch_tds_rise)
hold (DB[31] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[31] => CLKB 10 posedge  tch_tds_fall)
hold (DB[31] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[32] => CLKB 01 posedge  tch_tds_rise)
hold (DB[32] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[32] => CLKB 10 posedge  tch_tds_fall)
hold (DB[32] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[33] => CLKB 01 posedge  tch_tds_rise)
hold (DB[33] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[33] => CLKB 10 posedge  tch_tds_fall)
hold (DB[33] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[34] => CLKB 01 posedge  tch_tds_rise)
hold (DB[34] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[34] => CLKB 10 posedge  tch_tds_fall)
hold (DB[34] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[35] => CLKB 01 posedge  tch_tds_rise)
hold (DB[35] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[35] => CLKB 10 posedge  tch_tds_fall)
hold (DB[35] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[36] => CLKB 01 posedge  tch_tds_rise)
hold (DB[36] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[36] => CLKB 10 posedge  tch_tds_fall)
hold (DB[36] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[37] => CLKB 01 posedge  tch_tds_rise)
hold (DB[37] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[37] => CLKB 10 posedge  tch_tds_fall)
hold (DB[37] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[38] => CLKB 01 posedge  tch_tds_rise)
hold (DB[38] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[38] => CLKB 10 posedge  tch_tds_fall)
hold (DB[38] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[39] => CLKB 01 posedge  tch_tds_rise)
hold (DB[39] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[39] => CLKB 10 posedge  tch_tds_fall)
hold (DB[39] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[40] => CLKB 01 posedge  tch_tds_rise)
hold (DB[40] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[40] => CLKB 10 posedge  tch_tds_fall)
hold (DB[40] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[41] => CLKB 01 posedge  tch_tds_rise)
hold (DB[41] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[41] => CLKB 10 posedge  tch_tds_fall)
hold (DB[41] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[42] => CLKB 01 posedge  tch_tds_rise)
hold (DB[42] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[42] => CLKB 10 posedge  tch_tds_fall)
hold (DB[42] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[43] => CLKB 01 posedge  tch_tds_rise)
hold (DB[43] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[43] => CLKB 10 posedge  tch_tds_fall)
hold (DB[43] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[44] => CLKB 01 posedge  tch_tds_rise)
hold (DB[44] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[44] => CLKB 10 posedge  tch_tds_fall)
hold (DB[44] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[45] => CLKB 01 posedge  tch_tds_rise)
hold (DB[45] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[45] => CLKB 10 posedge  tch_tds_fall)
hold (DB[45] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[46] => CLKB 01 posedge  tch_tds_rise)
hold (DB[46] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[46] => CLKB 10 posedge  tch_tds_fall)
hold (DB[46] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[47] => CLKB 01 posedge  tch_tds_rise)
hold (DB[47] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[47] => CLKB 10 posedge  tch_tds_fall)
hold (DB[47] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[48] => CLKB 01 posedge  tch_tds_rise)
hold (DB[48] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[48] => CLKB 10 posedge  tch_tds_fall)
hold (DB[48] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[49] => CLKB 01 posedge  tch_tds_rise)
hold (DB[49] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[49] => CLKB 10 posedge  tch_tds_fall)
hold (DB[49] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[50] => CLKB 01 posedge  tch_tds_rise)
hold (DB[50] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[50] => CLKB 10 posedge  tch_tds_fall)
hold (DB[50] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[51] => CLKB 01 posedge  tch_tds_rise)
hold (DB[51] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[51] => CLKB 10 posedge  tch_tds_fall)
hold (DB[51] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[52] => CLKB 01 posedge  tch_tds_rise)
hold (DB[52] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[52] => CLKB 10 posedge  tch_tds_fall)
hold (DB[52] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[53] => CLKB 01 posedge  tch_tds_rise)
hold (DB[53] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[53] => CLKB 10 posedge  tch_tds_fall)
hold (DB[53] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[54] => CLKB 01 posedge  tch_tds_rise)
hold (DB[54] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[54] => CLKB 10 posedge  tch_tds_fall)
hold (DB[54] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[55] => CLKB 01 posedge  tch_tds_rise)
hold (DB[55] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[55] => CLKB 10 posedge  tch_tds_fall)
hold (DB[55] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[56] => CLKB 01 posedge  tch_tds_rise)
hold (DB[56] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[56] => CLKB 10 posedge  tch_tds_fall)
hold (DB[56] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[57] => CLKB 01 posedge  tch_tds_rise)
hold (DB[57] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[57] => CLKB 10 posedge  tch_tds_fall)
hold (DB[57] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[58] => CLKB 01 posedge  tch_tds_rise)
hold (DB[58] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[58] => CLKB 10 posedge  tch_tds_fall)
hold (DB[58] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[59] => CLKB 01 posedge  tch_tds_rise)
hold (DB[59] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[59] => CLKB 10 posedge  tch_tds_fall)
hold (DB[59] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[60] => CLKB 01 posedge  tch_tds_rise)
hold (DB[60] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[60] => CLKB 10 posedge  tch_tds_fall)
hold (DB[60] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[61] => CLKB 01 posedge  tch_tds_rise)
hold (DB[61] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[61] => CLKB 10 posedge  tch_tds_fall)
hold (DB[61] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[62] => CLKB 01 posedge  tch_tds_rise)
hold (DB[62] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[62] => CLKB 10 posedge  tch_tds_fall)
hold (DB[62] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[63] => CLKB 01 posedge  tch_tds_rise)
hold (DB[63] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[63] => CLKB 10 posedge  tch_tds_fall)
hold (DB[63] => CLKB 10 posedge  tch_tdh_fall )
setup (AB[0] => CLKB 01 posedge  tch_tas_rise)
hold (AB[0] => CLKB 01 posedge  tch_tah_rise )
setup (AB[0] => CLKB 10 posedge  tch_tas_fall)
hold (AB[0] => CLKB 10 posedge  tch_tah_fall )
setup (AB[1] => CLKB 01 posedge  tch_tas_rise)
hold (AB[1] => CLKB 01 posedge  tch_tah_rise )
setup (AB[1] => CLKB 10 posedge  tch_tas_fall)
hold (AB[1] => CLKB 10 posedge  tch_tah_fall )
setup (AB[2] => CLKB 01 posedge  tch_tas_rise)
hold (AB[2] => CLKB 01 posedge  tch_tah_rise )
setup (AB[2] => CLKB 10 posedge  tch_tas_fall)
hold (AB[2] => CLKB 10 posedge  tch_tah_fall )
setup (AB[3] => CLKB 01 posedge  tch_tas_rise)
hold (AB[3] => CLKB 01 posedge  tch_tah_rise )
setup (AB[3] => CLKB 10 posedge  tch_tas_fall)
hold (AB[3] => CLKB 10 posedge  tch_tah_fall )
setup (AB[4] => CLKB 01 posedge  tch_tas_rise)
hold (AB[4] => CLKB 01 posedge  tch_tah_rise )
setup (AB[4] => CLKB 10 posedge  tch_tas_fall)
hold (AB[4] => CLKB 10 posedge  tch_tah_fall )
setup (AB[5] => CLKB 01 posedge  tch_tas_rise)
hold (AB[5] => CLKB 01 posedge  tch_tah_rise )
setup (AB[5] => CLKB 10 posedge  tch_tas_fall)
hold (AB[5] => CLKB 10 posedge  tch_tah_fall )
setup (AB[6] => CLKB 01 posedge  tch_tas_rise)
hold (AB[6] => CLKB 01 posedge  tch_tah_rise )
setup (AB[6] => CLKB 10 posedge  tch_tas_fall)
hold (AB[6] => CLKB 10 posedge  tch_tah_fall )
setup (AB[7] => CLKB 01 posedge  tch_tas_rise)
hold (AB[7] => CLKB 01 posedge  tch_tah_rise )
setup (AB[7] => CLKB 10 posedge  tch_tas_fall)
hold (AB[7] => CLKB 10 posedge  tch_tah_fall )
setup (AB[8] => CLKB 01 posedge  tch_tas_rise)
hold (AB[8] => CLKB 01 posedge  tch_tah_rise )
setup (AB[8] => CLKB 10 posedge  tch_tas_fall)
hold (AB[8] => CLKB 10 posedge  tch_tah_fall )
setup (WENB => CLKB 01 posedge  tch_twens_rise)
hold (WENB => CLKB 01 posedge  tch_twenh_rise )
setup (WENB => CLKB 10 posedge  tch_twens_fall)
hold (WENB => CLKB 10 posedge  tch_twenh_fall )
setup (CENB => CLKB 01 posedge  tch_tcens_rise)
hold (CENB => CLKB 01 posedge  tch_tcenh_rise )
setup (CENB => CLKB 10 posedge  tch_tcens_fall)
hold (CENB => CLKB 10 posedge  tch_tcenh_fall )
mpwh   (CLKB     tpw_tckh)
mpwl   (CLKB     tpw_tckl)
period (CLKB 01  period_tcyc)
setup (CLKA => CLKB 01 posedge tch_clkas_clkb_rise)
setup (CLKB => CLKA 01 posedge tch_clkbs_clka_rise)
)
