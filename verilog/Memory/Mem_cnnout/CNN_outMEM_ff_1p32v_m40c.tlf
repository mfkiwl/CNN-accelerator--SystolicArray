/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2020  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Dual Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname "CNN_outMEM" -words 512 -bits 64 -frequency 1 -ring_width 4.0 -mux 4 -write_mask off -wp_size 8 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -dpccm on -asvm on -libname USERLIB -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      TLF model for Synchronous Dual-Port Ram
 *
 *      Library Name:   USERLIB
 *      Instance Name:  CNN_outMEM
 *      Words:          512
 *      Word Width:     64
 *      Mux:            4
 *      Process:        ff_1p32v_m40c
 *
 *      Creation Date:  2020-04-01 03:57:23Z
 *      Version:	2009Q1V1
 *
 *      Verified With: Cadence Central Delay Calculator
 *
 *      Modeling Assumptions: This memory model is written using TLF 3.0
 *          constructs.  Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2020-04-01 03:57:23Z")
  vendor("Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2020 ARM Physical IP, Inc.")
  environment("ff_1p32v_m40c")
  technology("CMOS")
  version("2009Q1V1")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(-40.000)
  voltage(1.320)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(0.750) error(0.750))
  load_limit(0.860) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(CNN_outMEM
Area (301565.846)
CT_TOLERANCE(0.132)
TIMING_model (tch_tcens_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.630:0.630:0.630 0.636:0.636:0.636 0.643:0.643:0.643 0.658:0.658:0.658 0.687:0.687:0.687 0.715:0.715:0.715 0.737:0.737:0.737)
         (0.619:0.619:0.619 0.625:0.625:0.625 0.632:0.632:0.632 0.646:0.646:0.646 0.675:0.675:0.675 0.704:0.704:0.704 0.725:0.725:0.725)
         (0.604:0.604:0.604 0.610:0.610:0.610 0.617:0.617:0.617 0.632:0.632:0.632 0.660:0.660:0.660 0.689:0.689:0.689 0.711:0.711:0.711)
         (0.575:0.575:0.575 0.581:0.581:0.581 0.588:0.588:0.588 0.602:0.602:0.602 0.631:0.631:0.631 0.660:0.660:0.660 0.681:0.681:0.681)
         (0.517:0.517:0.517 0.522:0.522:0.522 0.530:0.530:0.530 0.544:0.544:0.544 0.573:0.573:0.573 0.602:0.602:0.602 0.623:0.623:0.623)
         (0.458:0.458:0.458 0.464:0.464:0.464 0.471:0.471:0.471 0.486:0.486:0.486 0.514:0.514:0.514 0.543:0.543:0.543 0.565:0.565:0.565)
         (0.414:0.414:0.414 0.420:0.420:0.420 0.427:0.427:0.427 0.442:0.442:0.442 0.471:0.471:0.471 0.499:0.499:0.499 0.521:0.521:0.521)
       )))
TIMING_model (tch_tcens_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.563:0.563:0.563 0.565:0.565:0.565 0.567:0.567:0.567 0.572:0.572:0.572 0.580:0.580:0.580 0.589:0.589:0.589 0.595:0.595:0.595)
         (0.552:0.552:0.552 0.553:0.553:0.553 0.556:0.556:0.556 0.560:0.560:0.560 0.568:0.568:0.568 0.577:0.577:0.577 0.583:0.583:0.583)
         (0.537:0.537:0.537 0.539:0.539:0.539 0.541:0.541:0.541 0.545:0.545:0.545 0.554:0.554:0.554 0.562:0.562:0.562 0.569:0.569:0.569)
         (0.508:0.508:0.508 0.510:0.510:0.510 0.512:0.512:0.512 0.516:0.516:0.516 0.525:0.525:0.525 0.533:0.533:0.533 0.540:0.540:0.540)
         (0.449:0.449:0.449 0.451:0.451:0.451 0.453:0.453:0.453 0.458:0.458:0.458 0.466:0.466:0.466 0.475:0.475:0.475 0.481:0.481:0.481)
         (0.391:0.391:0.391 0.393:0.393:0.393 0.395:0.395:0.395 0.399:0.399:0.399 0.408:0.408:0.408 0.416:0.416:0.416 0.423:0.423:0.423)
         (0.347:0.347:0.347 0.349:0.349:0.349 0.351:0.351:0.351 0.355:0.355:0.355 0.364:0.364:0.364 0.373:0.373:0.373 0.379:0.379:0.379)
       )))
TIMING_model (tch_tcenh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.372:0.372:0.372 0.366:0.366:0.366 0.359:0.359:0.359 0.345:0.345:0.345 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.430:0.430:0.430 0.425:0.425:0.425 0.417:0.417:0.417 0.403:0.403:0.403 0.374:0.374:0.374 0.345:0.345:0.345 0.330:0.330:0.330)
         (0.474:0.474:0.474 0.468:0.468:0.468 0.461:0.461:0.461 0.447:0.447:0.447 0.418:0.418:0.418 0.389:0.389:0.389 0.368:0.368:0.368)
       )))
TIMING_model (tch_tcenh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330 0.330:0.330:0.330)
         (0.354:0.354:0.354 0.352:0.352:0.352 0.350:0.350:0.350 0.346:0.346:0.346 0.337:0.337:0.337 0.330:0.330:0.330 0.330:0.330:0.330)
       )))
TIMING_model (tch_twens_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.717:0.717:0.717 0.724:0.724:0.724 0.733:0.733:0.733 0.750:0.750:0.750 0.784:0.784:0.784 0.819:0.819:0.819 0.845:0.845:0.845)
         (0.705:0.705:0.705 0.712:0.712:0.712 0.721:0.721:0.721 0.738:0.738:0.738 0.773:0.773:0.773 0.807:0.807:0.807 0.833:0.833:0.833)
         (0.691:0.691:0.691 0.698:0.698:0.698 0.706:0.706:0.706 0.723:0.723:0.723 0.758:0.758:0.758 0.792:0.792:0.792 0.818:0.818:0.818)
         (0.662:0.662:0.662 0.668:0.668:0.668 0.677:0.677:0.677 0.694:0.694:0.694 0.729:0.729:0.729 0.763:0.763:0.763 0.789:0.789:0.789)
         (0.603:0.603:0.603 0.610:0.610:0.610 0.619:0.619:0.619 0.636:0.636:0.636 0.670:0.670:0.670 0.705:0.705:0.705 0.731:0.731:0.731)
         (0.545:0.545:0.545 0.552:0.552:0.552 0.560:0.560:0.560 0.578:0.578:0.578 0.612:0.612:0.612 0.646:0.646:0.646 0.672:0.672:0.672)
         (0.501:0.501:0.501 0.508:0.508:0.508 0.516:0.516:0.516 0.534:0.534:0.534 0.568:0.568:0.568 0.603:0.603:0.603 0.629:0.629:0.629)
       )))
TIMING_model (tch_twens_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.828:0.828:0.828 0.830:0.830:0.830 0.833:0.833:0.833 0.839:0.839:0.839 0.852:0.852:0.852 0.864:0.864:0.864 0.873:0.873:0.873)
         (0.816:0.816:0.816 0.818:0.818:0.818 0.821:0.821:0.821 0.828:0.828:0.828 0.840:0.840:0.840 0.852:0.852:0.852 0.862:0.862:0.862)
         (0.801:0.801:0.801 0.804:0.804:0.804 0.807:0.807:0.807 0.813:0.813:0.813 0.825:0.825:0.825 0.838:0.838:0.838 0.847:0.847:0.847)
         (0.772:0.772:0.772 0.775:0.775:0.775 0.778:0.778:0.778 0.784:0.784:0.784 0.796:0.796:0.796 0.809:0.809:0.809 0.818:0.818:0.818)
         (0.714:0.714:0.714 0.716:0.716:0.716 0.719:0.719:0.719 0.725:0.725:0.725 0.738:0.738:0.738 0.750:0.750:0.750 0.760:0.760:0.760)
         (0.655:0.655:0.655 0.658:0.658:0.658 0.661:0.661:0.661 0.667:0.667:0.667 0.680:0.680:0.680 0.692:0.692:0.692 0.701:0.701:0.701)
         (0.612:0.612:0.612 0.614:0.614:0.614 0.617:0.617:0.617 0.623:0.623:0.623 0.636:0.636:0.636 0.648:0.648:0.648 0.657:0.657:0.657)
       )))
TIMING_model (tch_twenh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
       )))
TIMING_model (tch_twenh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
       )))
TIMING_model (tch_tas_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.490:0.490:0.490 0.493:0.493:0.493 0.497:0.497:0.497 0.505:0.505:0.505 0.520:0.520:0.520 0.536:0.536:0.536 0.548:0.548:0.548)
         (0.478:0.478:0.478 0.482:0.482:0.482 0.485:0.485:0.485 0.493:0.493:0.493 0.509:0.509:0.509 0.524:0.524:0.524 0.536:0.536:0.536)
         (0.464:0.464:0.464 0.467:0.467:0.467 0.471:0.471:0.471 0.479:0.479:0.479 0.494:0.494:0.494 0.510:0.510:0.510 0.521:0.521:0.521)
         (0.435:0.435:0.435 0.438:0.438:0.438 0.442:0.442:0.442 0.449:0.449:0.449 0.465:0.465:0.465 0.481:0.481:0.481 0.492:0.492:0.492)
         (0.376:0.376:0.376 0.379:0.379:0.379 0.383:0.383:0.383 0.391:0.391:0.391 0.407:0.407:0.407 0.422:0.422:0.422 0.434:0.434:0.434)
         (0.318:0.318:0.318 0.321:0.321:0.321 0.325:0.325:0.325 0.333:0.333:0.333 0.348:0.348:0.348 0.364:0.364:0.364 0.375:0.375:0.375)
         (0.274:0.274:0.274 0.277:0.277:0.277 0.281:0.281:0.281 0.289:0.289:0.289 0.304:0.304:0.304 0.320:0.320:0.320 0.332:0.332:0.332)
       )))
TIMING_model (tch_tas_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.373:0.373:0.373 0.374:0.374:0.374 0.376:0.376:0.376 0.380:0.380:0.380 0.388:0.388:0.388 0.397:0.397:0.397 0.403:0.403:0.403)
         (0.361:0.361:0.361 0.362:0.362:0.362 0.365:0.365:0.365 0.369:0.369:0.369 0.377:0.377:0.377 0.385:0.385:0.385 0.391:0.391:0.391)
         (0.346:0.346:0.346 0.348:0.348:0.348 0.350:0.350:0.350 0.354:0.354:0.354 0.362:0.362:0.362 0.370:0.370:0.370 0.376:0.376:0.376)
         (0.317:0.317:0.317 0.319:0.319:0.319 0.321:0.321:0.321 0.325:0.325:0.325 0.333:0.333:0.333 0.341:0.341:0.341 0.347:0.347:0.347)
         (0.259:0.259:0.259 0.260:0.260:0.260 0.262:0.262:0.262 0.266:0.266:0.266 0.275:0.275:0.275 0.283:0.283:0.283 0.289:0.289:0.289)
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.216:0.216:0.216 0.224:0.224:0.224 0.230:0.230:0.230)
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
       )))
TIMING_model (tch_tah_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.242:0.242:0.242 0.239:0.239:0.239 0.235:0.235:0.235 0.227:0.227:0.227 0.212:0.212:0.212 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.300:0.300:0.300 0.297:0.297:0.297 0.293:0.293:0.293 0.286:0.286:0.286 0.270:0.270:0.270 0.255:0.255:0.255 0.243:0.243:0.243)
         (0.344:0.344:0.344 0.341:0.341:0.341 0.337:0.337:0.337 0.329:0.329:0.329 0.314:0.314:0.314 0.298:0.298:0.298 0.287:0.287:0.287)
       )))
TIMING_model (tch_tah_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210 0.210:0.210:0.210)
         (0.238:0.238:0.238 0.236:0.236:0.236 0.234:0.234:0.234 0.230:0.230:0.230 0.222:0.222:0.222 0.214:0.214:0.214 0.210:0.210:0.210)
         (0.296:0.296:0.296 0.295:0.295:0.295 0.293:0.293:0.293 0.289:0.289:0.289 0.281:0.281:0.281 0.272:0.272:0.272 0.266:0.266:0.266)
         (0.355:0.355:0.355 0.353:0.353:0.353 0.351:0.351:0.351 0.347:0.347:0.347 0.339:0.339:0.339 0.331:0.331:0.331 0.325:0.325:0.325)
         (0.399:0.399:0.399 0.397:0.397:0.397 0.395:0.395:0.395 0.391:0.391:0.391 0.383:0.383:0.383 0.375:0.375:0.375 0.369:0.369:0.369)
       )))
TIMING_model (tch_tds_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.592:0.592:0.592 0.594:0.594:0.594 0.595:0.595:0.595 0.598:0.598:0.598 0.604:0.604:0.604 0.609:0.609:0.609 0.614:0.614:0.614)
         (0.581:0.581:0.581 0.582:0.582:0.582 0.583:0.583:0.583 0.586:0.586:0.586 0.592:0.592:0.592 0.598:0.598:0.598 0.602:0.602:0.602)
         (0.566:0.566:0.566 0.567:0.567:0.567 0.569:0.569:0.569 0.572:0.572:0.572 0.577:0.577:0.577 0.583:0.583:0.583 0.588:0.588:0.588)
         (0.537:0.537:0.537 0.538:0.538:0.538 0.540:0.540:0.540 0.542:0.542:0.542 0.548:0.548:0.548 0.554:0.554:0.554 0.558:0.558:0.558)
         (0.479:0.479:0.479 0.480:0.480:0.480 0.481:0.481:0.481 0.484:0.484:0.484 0.490:0.490:0.490 0.496:0.496:0.496 0.500:0.500:0.500)
         (0.420:0.420:0.420 0.421:0.421:0.421 0.423:0.423:0.423 0.426:0.426:0.426 0.431:0.431:0.431 0.437:0.437:0.437 0.442:0.442:0.442)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
       )))
TIMING_model (tch_tds_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.551:0.551:0.551 0.554:0.554:0.554 0.558:0.558:0.558 0.567:0.567:0.567 0.584:0.584:0.584 0.601:0.601:0.601 0.614:0.614:0.614)
         (0.539:0.539:0.539 0.542:0.542:0.542 0.547:0.547:0.547 0.555:0.555:0.555 0.573:0.573:0.573 0.590:0.590:0.590 0.603:0.603:0.603)
         (0.524:0.524:0.524 0.528:0.528:0.528 0.532:0.532:0.532 0.541:0.541:0.541 0.558:0.558:0.558 0.575:0.575:0.575 0.588:0.588:0.588)
         (0.495:0.495:0.495 0.499:0.499:0.499 0.503:0.503:0.503 0.512:0.512:0.512 0.529:0.529:0.529 0.546:0.546:0.546 0.559:0.559:0.559)
         (0.437:0.437:0.437 0.440:0.440:0.440 0.445:0.445:0.445 0.453:0.453:0.453 0.470:0.470:0.470 0.488:0.488:0.488 0.501:0.501:0.501)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.412:0.412:0.412 0.429:0.429:0.429 0.442:0.442:0.442)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
       )))
TIMING_model (tch_tdh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.454:0.454:0.454 0.452:0.452:0.452 0.451:0.451:0.451 0.448:0.448:0.448 0.442:0.442:0.442 0.437:0.437:0.437 0.432:0.432:0.432)
         (0.497:0.497:0.497 0.496:0.496:0.496 0.495:0.495:0.495 0.492:0.492:0.492 0.486:0.486:0.486 0.480:0.480:0.480 0.476:0.476:0.476)
       )))
TIMING_model (tch_tdh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.416:0.416:0.416 0.413:0.413:0.413 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.431:0.431:0.431 0.427:0.427:0.427 0.423:0.423:0.423 0.414:0.414:0.414 0.410:0.410:0.410 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.460:0.460:0.460 0.456:0.456:0.456 0.452:0.452:0.452 0.443:0.443:0.443 0.426:0.426:0.426 0.410:0.410:0.410 0.410:0.410:0.410)
         (0.518:0.518:0.518 0.515:0.515:0.515 0.510:0.510:0.510 0.502:0.502:0.502 0.485:0.485:0.485 0.467:0.467:0.467 0.454:0.454:0.454)
         (0.577:0.577:0.577 0.573:0.573:0.573 0.569:0.569:0.569 0.560:0.560:0.560 0.543:0.543:0.543 0.526:0.526:0.526 0.513:0.513:0.513)
         (0.620:0.620:0.620 0.617:0.617:0.617 0.613:0.613:0.613 0.604:0.604:0.604 0.587:0.587:0.587 0.570:0.570:0.570 0.557:0.557:0.557)
       )))
TIMING_model (tch_clkas_clkb_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
       )))
TIMING_model (tch_clkbs_clka_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
         (1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298 1.298:1.298:1.298)
       )))
TIMING_model (dly_clk_q_rise      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (0.878:0.878:0.878 0.900:0.900:0.900 0.923:0.923:0.923 0.967:0.967:0.967 1.077:1.077:1.077 1.228:1.228:1.228 1.389:1.389:1.389)
         (0.890:0.890:0.890 0.912:0.912:0.912 0.934:0.934:0.934 0.979:0.979:0.979 1.088:1.088:1.088 1.239:1.239:1.239 1.401:1.401:1.401)
         (0.904:0.904:0.904 0.927:0.927:0.927 0.949:0.949:0.949 0.993:0.993:0.993 1.103:1.103:1.103 1.254:1.254:1.254 1.416:1.416:1.416)
         (0.934:0.934:0.934 0.956:0.956:0.956 0.978:0.978:0.978 1.022:1.022:1.022 1.132:1.132:1.132 1.283:1.283:1.283 1.445:1.445:1.445)
         (0.992:0.992:0.992 1.014:1.014:1.014 1.036:1.036:1.036 1.081:1.081:1.081 1.191:1.191:1.191 1.342:1.342:1.342 1.503:1.503:1.503)
         (1.050:1.050:1.050 1.073:1.073:1.073 1.095:1.095:1.095 1.139:1.139:1.139 1.249:1.249:1.249 1.400:1.400:1.400 1.562:1.562:1.562)
         (1.094:1.094:1.094 1.116:1.116:1.116 1.139:1.139:1.139 1.183:1.183:1.183 1.293:1.293:1.293 1.444:1.444:1.444 1.605:1.605:1.605)
       )))
TIMING_model (dly_clk_q_fall      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.400 0.600 0.750)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (0.878:0.878:0.878 0.900:0.900:0.900 0.923:0.923:0.923 0.967:0.967:0.967 1.077:1.077:1.077 1.228:1.228:1.228 1.389:1.389:1.389)
         (0.890:0.890:0.890 0.912:0.912:0.912 0.934:0.934:0.934 0.979:0.979:0.979 1.088:1.088:1.088 1.239:1.239:1.239 1.401:1.401:1.401)
         (0.904:0.904:0.904 0.927:0.927:0.927 0.949:0.949:0.949 0.993:0.993:0.993 1.103:1.103:1.103 1.254:1.254:1.254 1.416:1.416:1.416)
         (0.934:0.934:0.934 0.956:0.956:0.956 0.978:0.978:0.978 1.022:1.022:1.022 1.132:1.132:1.132 1.283:1.283:1.283 1.445:1.445:1.445)
         (0.992:0.992:0.992 1.014:1.014:1.014 1.036:1.036:1.036 1.081:1.081:1.081 1.191:1.191:1.191 1.342:1.342:1.342 1.503:1.503:1.503)
         (1.050:1.050:1.050 1.073:1.073:1.073 1.095:1.095:1.095 1.139:1.139:1.139 1.249:1.249:1.249 1.400:1.400:1.400 1.562:1.562:1.562)
         (1.094:1.094:1.094 1.116:1.116:1.116 1.139:1.139:1.139 1.183:1.183:1.183 1.293:1.293:1.293 1.444:1.444:1.444 1.605:1.605:1.605)
       )))
TIMING_model (sl_q_rise      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.026:0.026:0.026 0.071:0.071:0.071 0.116:0.116:0.116 0.206:0.206:0.206 0.446:0.446:0.446 0.866:0.866:0.866 1.317:1.317:1.317))))
TIMING_model (sl_q_fall      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.031:0.031:0.031 0.061:0.061:0.061 0.091:0.091:0.091 0.151:0.151:0.151 0.312:0.312:0.312 0.592:0.592:0.592 0.893:0.893:0.893))))
TIMING_model (period_tcyc (const (1.670)))
TIMING_model (tpw_tckl (const (0.117)))
TIMING_model (tpw_tckh (const (0.100)))
bus(QA[63:0] bustype(output)
 load_limit(warn(0.860) error(2.147483647e3))
 capacitance(0.000)
)
pin(CLKA pintype(input)
 capacitance(0.125)
)
pin(CENA pintype(input)
 capacitance(0.010)
)
pin(WENA pintype(input)
 capacitance(0.010)
)
bus(AA[8:0] bustype(input)
 capacitance(0.016)
)
bus(DA[63:0] bustype(input)
 capacitance(0.002)
)
path (CLKA => QA[0] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[0] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[1] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[1] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[2] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[2] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[3] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[3] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[4] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[4] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[5] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[5] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[6] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[6] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[7] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[7] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[8] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[8] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[9] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[9] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[10] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[10] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[11] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[11] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[12] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[12] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[13] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[13] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[14] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[14] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[15] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[15] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[16] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[16] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[17] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[17] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[18] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[18] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[19] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[19] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[20] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[20] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[21] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[21] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[22] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[22] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[23] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[23] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[24] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[24] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[25] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[25] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[26] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[26] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[27] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[27] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[28] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[28] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[29] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[29] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[30] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[30] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[31] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[31] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[32] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[32] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[33] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[33] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[34] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[34] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[35] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[35] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[36] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[36] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[37] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[37] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[38] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[38] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[39] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[39] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[40] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[40] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[41] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[41] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[42] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[42] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[43] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[43] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[44] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[44] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[45] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[45] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[46] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[46] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[47] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[47] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[48] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[48] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[49] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[49] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[50] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[50] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[51] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[51] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[52] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[52] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[53] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[53] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[54] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[54] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[55] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[55] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[56] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[56] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[57] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[57] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[58] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[58] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[59] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[59] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[60] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[60] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[61] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[61] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[62] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[62] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKA => QA[63] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKA => QA[63] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))

setup (DA[0] => CLKA 01 posedge  tch_tds_rise)
hold (DA[0] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[0] => CLKA 10 posedge  tch_tds_fall)
hold (DA[0] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[1] => CLKA 01 posedge  tch_tds_rise)
hold (DA[1] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[1] => CLKA 10 posedge  tch_tds_fall)
hold (DA[1] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[2] => CLKA 01 posedge  tch_tds_rise)
hold (DA[2] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[2] => CLKA 10 posedge  tch_tds_fall)
hold (DA[2] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[3] => CLKA 01 posedge  tch_tds_rise)
hold (DA[3] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[3] => CLKA 10 posedge  tch_tds_fall)
hold (DA[3] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[4] => CLKA 01 posedge  tch_tds_rise)
hold (DA[4] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[4] => CLKA 10 posedge  tch_tds_fall)
hold (DA[4] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[5] => CLKA 01 posedge  tch_tds_rise)
hold (DA[5] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[5] => CLKA 10 posedge  tch_tds_fall)
hold (DA[5] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[6] => CLKA 01 posedge  tch_tds_rise)
hold (DA[6] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[6] => CLKA 10 posedge  tch_tds_fall)
hold (DA[6] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[7] => CLKA 01 posedge  tch_tds_rise)
hold (DA[7] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[7] => CLKA 10 posedge  tch_tds_fall)
hold (DA[7] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[8] => CLKA 01 posedge  tch_tds_rise)
hold (DA[8] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[8] => CLKA 10 posedge  tch_tds_fall)
hold (DA[8] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[9] => CLKA 01 posedge  tch_tds_rise)
hold (DA[9] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[9] => CLKA 10 posedge  tch_tds_fall)
hold (DA[9] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[10] => CLKA 01 posedge  tch_tds_rise)
hold (DA[10] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[10] => CLKA 10 posedge  tch_tds_fall)
hold (DA[10] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[11] => CLKA 01 posedge  tch_tds_rise)
hold (DA[11] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[11] => CLKA 10 posedge  tch_tds_fall)
hold (DA[11] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[12] => CLKA 01 posedge  tch_tds_rise)
hold (DA[12] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[12] => CLKA 10 posedge  tch_tds_fall)
hold (DA[12] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[13] => CLKA 01 posedge  tch_tds_rise)
hold (DA[13] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[13] => CLKA 10 posedge  tch_tds_fall)
hold (DA[13] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[14] => CLKA 01 posedge  tch_tds_rise)
hold (DA[14] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[14] => CLKA 10 posedge  tch_tds_fall)
hold (DA[14] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[15] => CLKA 01 posedge  tch_tds_rise)
hold (DA[15] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[15] => CLKA 10 posedge  tch_tds_fall)
hold (DA[15] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[16] => CLKA 01 posedge  tch_tds_rise)
hold (DA[16] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[16] => CLKA 10 posedge  tch_tds_fall)
hold (DA[16] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[17] => CLKA 01 posedge  tch_tds_rise)
hold (DA[17] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[17] => CLKA 10 posedge  tch_tds_fall)
hold (DA[17] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[18] => CLKA 01 posedge  tch_tds_rise)
hold (DA[18] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[18] => CLKA 10 posedge  tch_tds_fall)
hold (DA[18] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[19] => CLKA 01 posedge  tch_tds_rise)
hold (DA[19] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[19] => CLKA 10 posedge  tch_tds_fall)
hold (DA[19] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[20] => CLKA 01 posedge  tch_tds_rise)
hold (DA[20] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[20] => CLKA 10 posedge  tch_tds_fall)
hold (DA[20] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[21] => CLKA 01 posedge  tch_tds_rise)
hold (DA[21] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[21] => CLKA 10 posedge  tch_tds_fall)
hold (DA[21] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[22] => CLKA 01 posedge  tch_tds_rise)
hold (DA[22] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[22] => CLKA 10 posedge  tch_tds_fall)
hold (DA[22] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[23] => CLKA 01 posedge  tch_tds_rise)
hold (DA[23] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[23] => CLKA 10 posedge  tch_tds_fall)
hold (DA[23] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[24] => CLKA 01 posedge  tch_tds_rise)
hold (DA[24] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[24] => CLKA 10 posedge  tch_tds_fall)
hold (DA[24] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[25] => CLKA 01 posedge  tch_tds_rise)
hold (DA[25] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[25] => CLKA 10 posedge  tch_tds_fall)
hold (DA[25] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[26] => CLKA 01 posedge  tch_tds_rise)
hold (DA[26] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[26] => CLKA 10 posedge  tch_tds_fall)
hold (DA[26] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[27] => CLKA 01 posedge  tch_tds_rise)
hold (DA[27] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[27] => CLKA 10 posedge  tch_tds_fall)
hold (DA[27] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[28] => CLKA 01 posedge  tch_tds_rise)
hold (DA[28] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[28] => CLKA 10 posedge  tch_tds_fall)
hold (DA[28] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[29] => CLKA 01 posedge  tch_tds_rise)
hold (DA[29] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[29] => CLKA 10 posedge  tch_tds_fall)
hold (DA[29] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[30] => CLKA 01 posedge  tch_tds_rise)
hold (DA[30] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[30] => CLKA 10 posedge  tch_tds_fall)
hold (DA[30] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[31] => CLKA 01 posedge  tch_tds_rise)
hold (DA[31] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[31] => CLKA 10 posedge  tch_tds_fall)
hold (DA[31] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[32] => CLKA 01 posedge  tch_tds_rise)
hold (DA[32] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[32] => CLKA 10 posedge  tch_tds_fall)
hold (DA[32] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[33] => CLKA 01 posedge  tch_tds_rise)
hold (DA[33] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[33] => CLKA 10 posedge  tch_tds_fall)
hold (DA[33] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[34] => CLKA 01 posedge  tch_tds_rise)
hold (DA[34] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[34] => CLKA 10 posedge  tch_tds_fall)
hold (DA[34] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[35] => CLKA 01 posedge  tch_tds_rise)
hold (DA[35] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[35] => CLKA 10 posedge  tch_tds_fall)
hold (DA[35] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[36] => CLKA 01 posedge  tch_tds_rise)
hold (DA[36] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[36] => CLKA 10 posedge  tch_tds_fall)
hold (DA[36] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[37] => CLKA 01 posedge  tch_tds_rise)
hold (DA[37] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[37] => CLKA 10 posedge  tch_tds_fall)
hold (DA[37] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[38] => CLKA 01 posedge  tch_tds_rise)
hold (DA[38] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[38] => CLKA 10 posedge  tch_tds_fall)
hold (DA[38] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[39] => CLKA 01 posedge  tch_tds_rise)
hold (DA[39] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[39] => CLKA 10 posedge  tch_tds_fall)
hold (DA[39] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[40] => CLKA 01 posedge  tch_tds_rise)
hold (DA[40] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[40] => CLKA 10 posedge  tch_tds_fall)
hold (DA[40] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[41] => CLKA 01 posedge  tch_tds_rise)
hold (DA[41] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[41] => CLKA 10 posedge  tch_tds_fall)
hold (DA[41] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[42] => CLKA 01 posedge  tch_tds_rise)
hold (DA[42] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[42] => CLKA 10 posedge  tch_tds_fall)
hold (DA[42] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[43] => CLKA 01 posedge  tch_tds_rise)
hold (DA[43] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[43] => CLKA 10 posedge  tch_tds_fall)
hold (DA[43] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[44] => CLKA 01 posedge  tch_tds_rise)
hold (DA[44] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[44] => CLKA 10 posedge  tch_tds_fall)
hold (DA[44] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[45] => CLKA 01 posedge  tch_tds_rise)
hold (DA[45] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[45] => CLKA 10 posedge  tch_tds_fall)
hold (DA[45] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[46] => CLKA 01 posedge  tch_tds_rise)
hold (DA[46] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[46] => CLKA 10 posedge  tch_tds_fall)
hold (DA[46] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[47] => CLKA 01 posedge  tch_tds_rise)
hold (DA[47] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[47] => CLKA 10 posedge  tch_tds_fall)
hold (DA[47] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[48] => CLKA 01 posedge  tch_tds_rise)
hold (DA[48] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[48] => CLKA 10 posedge  tch_tds_fall)
hold (DA[48] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[49] => CLKA 01 posedge  tch_tds_rise)
hold (DA[49] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[49] => CLKA 10 posedge  tch_tds_fall)
hold (DA[49] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[50] => CLKA 01 posedge  tch_tds_rise)
hold (DA[50] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[50] => CLKA 10 posedge  tch_tds_fall)
hold (DA[50] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[51] => CLKA 01 posedge  tch_tds_rise)
hold (DA[51] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[51] => CLKA 10 posedge  tch_tds_fall)
hold (DA[51] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[52] => CLKA 01 posedge  tch_tds_rise)
hold (DA[52] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[52] => CLKA 10 posedge  tch_tds_fall)
hold (DA[52] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[53] => CLKA 01 posedge  tch_tds_rise)
hold (DA[53] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[53] => CLKA 10 posedge  tch_tds_fall)
hold (DA[53] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[54] => CLKA 01 posedge  tch_tds_rise)
hold (DA[54] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[54] => CLKA 10 posedge  tch_tds_fall)
hold (DA[54] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[55] => CLKA 01 posedge  tch_tds_rise)
hold (DA[55] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[55] => CLKA 10 posedge  tch_tds_fall)
hold (DA[55] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[56] => CLKA 01 posedge  tch_tds_rise)
hold (DA[56] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[56] => CLKA 10 posedge  tch_tds_fall)
hold (DA[56] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[57] => CLKA 01 posedge  tch_tds_rise)
hold (DA[57] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[57] => CLKA 10 posedge  tch_tds_fall)
hold (DA[57] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[58] => CLKA 01 posedge  tch_tds_rise)
hold (DA[58] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[58] => CLKA 10 posedge  tch_tds_fall)
hold (DA[58] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[59] => CLKA 01 posedge  tch_tds_rise)
hold (DA[59] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[59] => CLKA 10 posedge  tch_tds_fall)
hold (DA[59] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[60] => CLKA 01 posedge  tch_tds_rise)
hold (DA[60] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[60] => CLKA 10 posedge  tch_tds_fall)
hold (DA[60] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[61] => CLKA 01 posedge  tch_tds_rise)
hold (DA[61] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[61] => CLKA 10 posedge  tch_tds_fall)
hold (DA[61] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[62] => CLKA 01 posedge  tch_tds_rise)
hold (DA[62] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[62] => CLKA 10 posedge  tch_tds_fall)
hold (DA[62] => CLKA 10 posedge  tch_tdh_fall )
setup (DA[63] => CLKA 01 posedge  tch_tds_rise)
hold (DA[63] => CLKA 01 posedge  tch_tdh_rise )
setup (DA[63] => CLKA 10 posedge  tch_tds_fall)
hold (DA[63] => CLKA 10 posedge  tch_tdh_fall )
setup (AA[0] => CLKA 01 posedge  tch_tas_rise)
hold (AA[0] => CLKA 01 posedge  tch_tah_rise )
setup (AA[0] => CLKA 10 posedge  tch_tas_fall)
hold (AA[0] => CLKA 10 posedge  tch_tah_fall )
setup (AA[1] => CLKA 01 posedge  tch_tas_rise)
hold (AA[1] => CLKA 01 posedge  tch_tah_rise )
setup (AA[1] => CLKA 10 posedge  tch_tas_fall)
hold (AA[1] => CLKA 10 posedge  tch_tah_fall )
setup (AA[2] => CLKA 01 posedge  tch_tas_rise)
hold (AA[2] => CLKA 01 posedge  tch_tah_rise )
setup (AA[2] => CLKA 10 posedge  tch_tas_fall)
hold (AA[2] => CLKA 10 posedge  tch_tah_fall )
setup (AA[3] => CLKA 01 posedge  tch_tas_rise)
hold (AA[3] => CLKA 01 posedge  tch_tah_rise )
setup (AA[3] => CLKA 10 posedge  tch_tas_fall)
hold (AA[3] => CLKA 10 posedge  tch_tah_fall )
setup (AA[4] => CLKA 01 posedge  tch_tas_rise)
hold (AA[4] => CLKA 01 posedge  tch_tah_rise )
setup (AA[4] => CLKA 10 posedge  tch_tas_fall)
hold (AA[4] => CLKA 10 posedge  tch_tah_fall )
setup (AA[5] => CLKA 01 posedge  tch_tas_rise)
hold (AA[5] => CLKA 01 posedge  tch_tah_rise )
setup (AA[5] => CLKA 10 posedge  tch_tas_fall)
hold (AA[5] => CLKA 10 posedge  tch_tah_fall )
setup (AA[6] => CLKA 01 posedge  tch_tas_rise)
hold (AA[6] => CLKA 01 posedge  tch_tah_rise )
setup (AA[6] => CLKA 10 posedge  tch_tas_fall)
hold (AA[6] => CLKA 10 posedge  tch_tah_fall )
setup (AA[7] => CLKA 01 posedge  tch_tas_rise)
hold (AA[7] => CLKA 01 posedge  tch_tah_rise )
setup (AA[7] => CLKA 10 posedge  tch_tas_fall)
hold (AA[7] => CLKA 10 posedge  tch_tah_fall )
setup (AA[8] => CLKA 01 posedge  tch_tas_rise)
hold (AA[8] => CLKA 01 posedge  tch_tah_rise )
setup (AA[8] => CLKA 10 posedge  tch_tas_fall)
hold (AA[8] => CLKA 10 posedge  tch_tah_fall )
setup (WENA => CLKA 01 posedge  tch_twens_rise)
hold (WENA => CLKA 01 posedge  tch_twenh_rise )
setup (WENA => CLKA 10 posedge  tch_twens_fall)
hold (WENA => CLKA 10 posedge  tch_twenh_fall )
setup (CENA => CLKA 01 posedge  tch_tcens_rise)
hold (CENA => CLKA 01 posedge  tch_tcenh_rise )
setup (CENA => CLKA 10 posedge  tch_tcens_fall)
hold (CENA => CLKA 10 posedge  tch_tcenh_fall )
mpwh   (CLKA     tpw_tckh)
mpwl   (CLKA     tpw_tckl)
period (CLKA 01  period_tcyc)
bus(QB[63:0] bustype(output)
 load_limit(warn(0.860) error(2.147483647e3))
 capacitance(0.000)
)
pin(CLKB pintype(input)
 capacitance(0.125)
)
pin(CENB pintype(input)
 capacitance(0.010)
)
pin(WENB pintype(input)
 capacitance(0.010)
)
bus(AB[8:0] bustype(input)
 capacitance(0.016)
)
bus(DB[63:0] bustype(input)
 capacitance(0.002)
)
path (CLKB => QB[0] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[0] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[1] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[1] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[2] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[2] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[3] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[3] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[4] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[4] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[5] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[5] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[6] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[6] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[7] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[7] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[8] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[8] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[9] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[9] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[10] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[10] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[11] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[11] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[12] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[12] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[13] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[13] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[14] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[14] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[15] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[15] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[16] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[16] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[17] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[17] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[18] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[18] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[19] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[19] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[20] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[20] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[21] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[21] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[22] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[22] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[23] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[23] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[24] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[24] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[25] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[25] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[26] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[26] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[27] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[27] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[28] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[28] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[29] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[29] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[30] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[30] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[31] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[31] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[32] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[32] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[33] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[33] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[34] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[34] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[35] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[35] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[36] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[36] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[37] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[37] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[38] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[38] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[39] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[39] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[40] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[40] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[41] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[41] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[42] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[42] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[43] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[43] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[44] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[44] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[45] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[45] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[46] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[46] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[47] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[47] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[48] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[48] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[49] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[49] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[50] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[50] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[51] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[51] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[52] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[52] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[53] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[53] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[54] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[54] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[55] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[55] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[56] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[56] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[57] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[57] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[58] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[58] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[59] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[59] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[60] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[60] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[61] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[61] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[62] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[62] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLKB => QB[63] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLKB => QB[63] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))

setup (DB[0] => CLKB 01 posedge  tch_tds_rise)
hold (DB[0] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[0] => CLKB 10 posedge  tch_tds_fall)
hold (DB[0] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[1] => CLKB 01 posedge  tch_tds_rise)
hold (DB[1] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[1] => CLKB 10 posedge  tch_tds_fall)
hold (DB[1] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[2] => CLKB 01 posedge  tch_tds_rise)
hold (DB[2] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[2] => CLKB 10 posedge  tch_tds_fall)
hold (DB[2] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[3] => CLKB 01 posedge  tch_tds_rise)
hold (DB[3] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[3] => CLKB 10 posedge  tch_tds_fall)
hold (DB[3] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[4] => CLKB 01 posedge  tch_tds_rise)
hold (DB[4] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[4] => CLKB 10 posedge  tch_tds_fall)
hold (DB[4] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[5] => CLKB 01 posedge  tch_tds_rise)
hold (DB[5] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[5] => CLKB 10 posedge  tch_tds_fall)
hold (DB[5] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[6] => CLKB 01 posedge  tch_tds_rise)
hold (DB[6] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[6] => CLKB 10 posedge  tch_tds_fall)
hold (DB[6] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[7] => CLKB 01 posedge  tch_tds_rise)
hold (DB[7] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[7] => CLKB 10 posedge  tch_tds_fall)
hold (DB[7] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[8] => CLKB 01 posedge  tch_tds_rise)
hold (DB[8] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[8] => CLKB 10 posedge  tch_tds_fall)
hold (DB[8] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[9] => CLKB 01 posedge  tch_tds_rise)
hold (DB[9] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[9] => CLKB 10 posedge  tch_tds_fall)
hold (DB[9] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[10] => CLKB 01 posedge  tch_tds_rise)
hold (DB[10] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[10] => CLKB 10 posedge  tch_tds_fall)
hold (DB[10] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[11] => CLKB 01 posedge  tch_tds_rise)
hold (DB[11] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[11] => CLKB 10 posedge  tch_tds_fall)
hold (DB[11] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[12] => CLKB 01 posedge  tch_tds_rise)
hold (DB[12] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[12] => CLKB 10 posedge  tch_tds_fall)
hold (DB[12] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[13] => CLKB 01 posedge  tch_tds_rise)
hold (DB[13] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[13] => CLKB 10 posedge  tch_tds_fall)
hold (DB[13] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[14] => CLKB 01 posedge  tch_tds_rise)
hold (DB[14] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[14] => CLKB 10 posedge  tch_tds_fall)
hold (DB[14] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[15] => CLKB 01 posedge  tch_tds_rise)
hold (DB[15] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[15] => CLKB 10 posedge  tch_tds_fall)
hold (DB[15] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[16] => CLKB 01 posedge  tch_tds_rise)
hold (DB[16] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[16] => CLKB 10 posedge  tch_tds_fall)
hold (DB[16] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[17] => CLKB 01 posedge  tch_tds_rise)
hold (DB[17] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[17] => CLKB 10 posedge  tch_tds_fall)
hold (DB[17] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[18] => CLKB 01 posedge  tch_tds_rise)
hold (DB[18] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[18] => CLKB 10 posedge  tch_tds_fall)
hold (DB[18] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[19] => CLKB 01 posedge  tch_tds_rise)
hold (DB[19] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[19] => CLKB 10 posedge  tch_tds_fall)
hold (DB[19] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[20] => CLKB 01 posedge  tch_tds_rise)
hold (DB[20] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[20] => CLKB 10 posedge  tch_tds_fall)
hold (DB[20] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[21] => CLKB 01 posedge  tch_tds_rise)
hold (DB[21] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[21] => CLKB 10 posedge  tch_tds_fall)
hold (DB[21] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[22] => CLKB 01 posedge  tch_tds_rise)
hold (DB[22] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[22] => CLKB 10 posedge  tch_tds_fall)
hold (DB[22] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[23] => CLKB 01 posedge  tch_tds_rise)
hold (DB[23] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[23] => CLKB 10 posedge  tch_tds_fall)
hold (DB[23] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[24] => CLKB 01 posedge  tch_tds_rise)
hold (DB[24] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[24] => CLKB 10 posedge  tch_tds_fall)
hold (DB[24] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[25] => CLKB 01 posedge  tch_tds_rise)
hold (DB[25] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[25] => CLKB 10 posedge  tch_tds_fall)
hold (DB[25] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[26] => CLKB 01 posedge  tch_tds_rise)
hold (DB[26] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[26] => CLKB 10 posedge  tch_tds_fall)
hold (DB[26] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[27] => CLKB 01 posedge  tch_tds_rise)
hold (DB[27] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[27] => CLKB 10 posedge  tch_tds_fall)
hold (DB[27] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[28] => CLKB 01 posedge  tch_tds_rise)
hold (DB[28] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[28] => CLKB 10 posedge  tch_tds_fall)
hold (DB[28] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[29] => CLKB 01 posedge  tch_tds_rise)
hold (DB[29] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[29] => CLKB 10 posedge  tch_tds_fall)
hold (DB[29] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[30] => CLKB 01 posedge  tch_tds_rise)
hold (DB[30] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[30] => CLKB 10 posedge  tch_tds_fall)
hold (DB[30] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[31] => CLKB 01 posedge  tch_tds_rise)
hold (DB[31] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[31] => CLKB 10 posedge  tch_tds_fall)
hold (DB[31] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[32] => CLKB 01 posedge  tch_tds_rise)
hold (DB[32] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[32] => CLKB 10 posedge  tch_tds_fall)
hold (DB[32] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[33] => CLKB 01 posedge  tch_tds_rise)
hold (DB[33] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[33] => CLKB 10 posedge  tch_tds_fall)
hold (DB[33] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[34] => CLKB 01 posedge  tch_tds_rise)
hold (DB[34] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[34] => CLKB 10 posedge  tch_tds_fall)
hold (DB[34] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[35] => CLKB 01 posedge  tch_tds_rise)
hold (DB[35] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[35] => CLKB 10 posedge  tch_tds_fall)
hold (DB[35] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[36] => CLKB 01 posedge  tch_tds_rise)
hold (DB[36] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[36] => CLKB 10 posedge  tch_tds_fall)
hold (DB[36] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[37] => CLKB 01 posedge  tch_tds_rise)
hold (DB[37] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[37] => CLKB 10 posedge  tch_tds_fall)
hold (DB[37] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[38] => CLKB 01 posedge  tch_tds_rise)
hold (DB[38] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[38] => CLKB 10 posedge  tch_tds_fall)
hold (DB[38] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[39] => CLKB 01 posedge  tch_tds_rise)
hold (DB[39] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[39] => CLKB 10 posedge  tch_tds_fall)
hold (DB[39] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[40] => CLKB 01 posedge  tch_tds_rise)
hold (DB[40] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[40] => CLKB 10 posedge  tch_tds_fall)
hold (DB[40] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[41] => CLKB 01 posedge  tch_tds_rise)
hold (DB[41] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[41] => CLKB 10 posedge  tch_tds_fall)
hold (DB[41] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[42] => CLKB 01 posedge  tch_tds_rise)
hold (DB[42] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[42] => CLKB 10 posedge  tch_tds_fall)
hold (DB[42] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[43] => CLKB 01 posedge  tch_tds_rise)
hold (DB[43] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[43] => CLKB 10 posedge  tch_tds_fall)
hold (DB[43] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[44] => CLKB 01 posedge  tch_tds_rise)
hold (DB[44] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[44] => CLKB 10 posedge  tch_tds_fall)
hold (DB[44] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[45] => CLKB 01 posedge  tch_tds_rise)
hold (DB[45] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[45] => CLKB 10 posedge  tch_tds_fall)
hold (DB[45] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[46] => CLKB 01 posedge  tch_tds_rise)
hold (DB[46] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[46] => CLKB 10 posedge  tch_tds_fall)
hold (DB[46] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[47] => CLKB 01 posedge  tch_tds_rise)
hold (DB[47] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[47] => CLKB 10 posedge  tch_tds_fall)
hold (DB[47] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[48] => CLKB 01 posedge  tch_tds_rise)
hold (DB[48] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[48] => CLKB 10 posedge  tch_tds_fall)
hold (DB[48] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[49] => CLKB 01 posedge  tch_tds_rise)
hold (DB[49] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[49] => CLKB 10 posedge  tch_tds_fall)
hold (DB[49] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[50] => CLKB 01 posedge  tch_tds_rise)
hold (DB[50] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[50] => CLKB 10 posedge  tch_tds_fall)
hold (DB[50] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[51] => CLKB 01 posedge  tch_tds_rise)
hold (DB[51] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[51] => CLKB 10 posedge  tch_tds_fall)
hold (DB[51] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[52] => CLKB 01 posedge  tch_tds_rise)
hold (DB[52] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[52] => CLKB 10 posedge  tch_tds_fall)
hold (DB[52] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[53] => CLKB 01 posedge  tch_tds_rise)
hold (DB[53] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[53] => CLKB 10 posedge  tch_tds_fall)
hold (DB[53] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[54] => CLKB 01 posedge  tch_tds_rise)
hold (DB[54] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[54] => CLKB 10 posedge  tch_tds_fall)
hold (DB[54] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[55] => CLKB 01 posedge  tch_tds_rise)
hold (DB[55] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[55] => CLKB 10 posedge  tch_tds_fall)
hold (DB[55] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[56] => CLKB 01 posedge  tch_tds_rise)
hold (DB[56] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[56] => CLKB 10 posedge  tch_tds_fall)
hold (DB[56] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[57] => CLKB 01 posedge  tch_tds_rise)
hold (DB[57] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[57] => CLKB 10 posedge  tch_tds_fall)
hold (DB[57] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[58] => CLKB 01 posedge  tch_tds_rise)
hold (DB[58] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[58] => CLKB 10 posedge  tch_tds_fall)
hold (DB[58] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[59] => CLKB 01 posedge  tch_tds_rise)
hold (DB[59] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[59] => CLKB 10 posedge  tch_tds_fall)
hold (DB[59] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[60] => CLKB 01 posedge  tch_tds_rise)
hold (DB[60] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[60] => CLKB 10 posedge  tch_tds_fall)
hold (DB[60] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[61] => CLKB 01 posedge  tch_tds_rise)
hold (DB[61] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[61] => CLKB 10 posedge  tch_tds_fall)
hold (DB[61] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[62] => CLKB 01 posedge  tch_tds_rise)
hold (DB[62] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[62] => CLKB 10 posedge  tch_tds_fall)
hold (DB[62] => CLKB 10 posedge  tch_tdh_fall )
setup (DB[63] => CLKB 01 posedge  tch_tds_rise)
hold (DB[63] => CLKB 01 posedge  tch_tdh_rise )
setup (DB[63] => CLKB 10 posedge  tch_tds_fall)
hold (DB[63] => CLKB 10 posedge  tch_tdh_fall )
setup (AB[0] => CLKB 01 posedge  tch_tas_rise)
hold (AB[0] => CLKB 01 posedge  tch_tah_rise )
setup (AB[0] => CLKB 10 posedge  tch_tas_fall)
hold (AB[0] => CLKB 10 posedge  tch_tah_fall )
setup (AB[1] => CLKB 01 posedge  tch_tas_rise)
hold (AB[1] => CLKB 01 posedge  tch_tah_rise )
setup (AB[1] => CLKB 10 posedge  tch_tas_fall)
hold (AB[1] => CLKB 10 posedge  tch_tah_fall )
setup (AB[2] => CLKB 01 posedge  tch_tas_rise)
hold (AB[2] => CLKB 01 posedge  tch_tah_rise )
setup (AB[2] => CLKB 10 posedge  tch_tas_fall)
hold (AB[2] => CLKB 10 posedge  tch_tah_fall )
setup (AB[3] => CLKB 01 posedge  tch_tas_rise)
hold (AB[3] => CLKB 01 posedge  tch_tah_rise )
setup (AB[3] => CLKB 10 posedge  tch_tas_fall)
hold (AB[3] => CLKB 10 posedge  tch_tah_fall )
setup (AB[4] => CLKB 01 posedge  tch_tas_rise)
hold (AB[4] => CLKB 01 posedge  tch_tah_rise )
setup (AB[4] => CLKB 10 posedge  tch_tas_fall)
hold (AB[4] => CLKB 10 posedge  tch_tah_fall )
setup (AB[5] => CLKB 01 posedge  tch_tas_rise)
hold (AB[5] => CLKB 01 posedge  tch_tah_rise )
setup (AB[5] => CLKB 10 posedge  tch_tas_fall)
hold (AB[5] => CLKB 10 posedge  tch_tah_fall )
setup (AB[6] => CLKB 01 posedge  tch_tas_rise)
hold (AB[6] => CLKB 01 posedge  tch_tah_rise )
setup (AB[6] => CLKB 10 posedge  tch_tas_fall)
hold (AB[6] => CLKB 10 posedge  tch_tah_fall )
setup (AB[7] => CLKB 01 posedge  tch_tas_rise)
hold (AB[7] => CLKB 01 posedge  tch_tah_rise )
setup (AB[7] => CLKB 10 posedge  tch_tas_fall)
hold (AB[7] => CLKB 10 posedge  tch_tah_fall )
setup (AB[8] => CLKB 01 posedge  tch_tas_rise)
hold (AB[8] => CLKB 01 posedge  tch_tah_rise )
setup (AB[8] => CLKB 10 posedge  tch_tas_fall)
hold (AB[8] => CLKB 10 posedge  tch_tah_fall )
setup (WENB => CLKB 01 posedge  tch_twens_rise)
hold (WENB => CLKB 01 posedge  tch_twenh_rise )
setup (WENB => CLKB 10 posedge  tch_twens_fall)
hold (WENB => CLKB 10 posedge  tch_twenh_fall )
setup (CENB => CLKB 01 posedge  tch_tcens_rise)
hold (CENB => CLKB 01 posedge  tch_tcenh_rise )
setup (CENB => CLKB 10 posedge  tch_tcens_fall)
hold (CENB => CLKB 10 posedge  tch_tcenh_fall )
mpwh   (CLKB     tpw_tckh)
mpwl   (CLKB     tpw_tckl)
period (CLKB 01  period_tcyc)
setup (CLKA => CLKB 01 posedge tch_clkas_clkb_rise)
setup (CLKB => CLKA 01 posedge tch_clkbs_clka_rise)
)
